USE [SPARE_PART_UPDATE]
GO
/****** Object:  StoredProcedure [dbo].[PKG_BUSINESS_GOODS_RECEIPT_ISSUE@PUT]    Script Date: 6/28/2021 10:36:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROC [dbo].[PKG_BUSINESS_GOODS_RECEIPT_ISSUE@PUT](
@A_DATA   GOODS_RECEIPT_ISSUE_TYPE_TABLE READONLY,
@A_USER    NVARCHAR(50),
@A_DELIVER_RECEIVER NVARCHAR(100),
@A_INOUT    NVARCHAR(20),
@N_RETURN	int				OUTPUT,
@V_RETURN	NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  
			DECLARE @A_RECEIPT_ISSUE_CODE NVARCHAR(50);
			DECLARE @A_STATUS NVARCHAR(50);

			SELECT @A_RECEIPT_ISSUE_CODE = [RECEIPT_ISSUE_CODE],@A_STATUS = [STATUS] FROM @A_DATA GROUP BY [RECEIPT_ISSUE_CODE],[STATUS]

			BEGIN TRAN;
			    IF @A_RECEIPT_ISSUE_CODE = 'N'
					SET @A_RECEIPT_ISSUE_CODE = NEWID()
				ELSE
					BEGIN
						IF @A_INOUT = 'IN'
						  BEGIN
								DELETE FROM [dbo].[EWIP_INVENTORY_DELIVERY_RECEIVING] WHERE CODE_NO = @A_RECEIPT_ISSUE_CODE
								DELETE FROM [dbo].[EWIP_SP_STOCKIN]  WHERE STOCK_IN_CODE = @A_RECEIPT_ISSUE_CODE
								DELETE FROM [dbo].[EWIP_HISTORY_INVENTORY]  WHERE STOCK_IN_OUT_CODE = @A_RECEIPT_ISSUE_CODE
						   END
						ELSE
						  BEGIN
							DELETE FROM [dbo].[EWIP_INVENTORY_DELIVERY_RECEIVING] WHERE CODE_NO = @A_RECEIPT_ISSUE_CODE
							DELETE FROM [dbo].[EWIP_HISTORY_INVENTORY]  WHERE STOCK_IN_OUT_CODE = @A_RECEIPT_ISSUE_CODE
							DELETE FROM [dbo].[EWIP_STOCK_OUT] WHERE [STOCK_OUT_CODE] = @A_RECEIPT_ISSUE_CODE
							DELETE FROM [dbo].[EWIP_LOCALTION_STOCK_OUT] WHERE [STOCK_OUT_CODE]= @A_RECEIPT_ISSUE_CODE
						  END
					END
				  
					INSERT INTO [dbo].[EWIP_INVENTORY_DELIVERY_RECEIVING]
					SELECT @A_RECEIPT_ISSUE_CODE,[CREATE_DATE],[INT_OUT],[STOCK_CODE],[DEPT_CODE],[USER_CREATE],[USER_SYS],[ORDER_CODE],[STATUS],@A_DELIVER_RECEIVER AS [DELIVERET_RECEIVER]
					FROM @A_DATA
					GROUP BY [DEPT_CODE],[STOCK_CODE],[RECEIPT_ISSUE_CODE],[CREATE_DATE],[INT_OUT],[USER_CREATE],[USER_SYS],[ORDER_CODE],[STATUS]

					IF @A_INOUT = 'IN'
						  BEGIN
							INSERT INTO [dbo].[EWIP_SP_STOCKIN]
							SELECT 
							[SPARE_PART_CODE],
							@A_RECEIPT_ISSUE_CODE,
							[QUANTITY],
							[PRICE_VN],
							[UNIT],
							VENDER_ID,
							[STOCK_CODE],
							[CAUSE],
							[DEPT_CODE],
							[CREATE_DATE],
							[USER_CREATE],
							[AMOUNT_US],
							[AMOUNT_VN],
							[NOTE],
							YEAR([CREATE_DATE]),
							MONTH([CREATE_DATE]),
							[PRICE_US],
							[TYPE_IN_OUT_CODE]
							FROM @A_DATA
							LEFT JOIN [dbo].[EWIP_SPARE_PART] ON CODE = [SPARE_PART_CODE]
						  END
					ELSE 
					     BEGIN
							INSERT INTO [dbo].[EWIP_STOCK_OUT]
							SELECT 
							@A_RECEIPT_ISSUE_CODE,
							[SPARE_PART_CODE],
							[CAUSE],
							[STOCK_CODE],
							[DEPT_CODE],
							[CREATE_DATE],
							YEAR([CREATE_DATE]),
							MONTH([CREATE_DATE]),
							[TYPE_IN_OUT_CODE]
							[UNIT],
							VENDER_ID,
							
							
							
							
							[USER_CREATE],
							[AMOUNT_US],
							[AMOUNT_VN],
							[NOTE],
						
							[PRICE_US],
							
							FROM @A_DATA
							LEFT JOIN [dbo].[EWIP_SPARE_PART] ON CODE = [SPARE_PART_CODE]
						 END

					INSERT INTO [dbo].[EWIP_HISTORY_INVENTORY]
					SELECT [SPARE_PART_CODE],[QUANTITY],[UNIT],[DEPT_CODE],[STOCK_CODE],[CREATE_DATE],MONTH([CREATE_DATE]),YEAR([CREATE_DATE]),[INT_OUT],@A_RECEIPT_ISSUE_CODE,[STATUS]
					FROM @A_DATA

					-- RECACULATOR INVENTORY : Tinh lai ton kho khi insert/update
					IF @A_STATUS = 'COMPLETE'
					  BEGIN
						DECLARE @A_DATE DATE
						DECLARE @A_STOCK_CODE VARCHAR(50)
						DECLARE @A_DEPT_CODE NVARCHAR(100)
						DECLARE @A_USER_CREATE NVARCHAR(50)		
						DECLARE @A_SPARE_PART_CODE NVARCHAR(50)					
						DECLARE @A_UNIT NVARCHAR(50)
						DECLARE @A_YEAR int
						DECLARE @A_MONTH int
					
						DECLARE cursorInventory CURSOR FOR
						SELECT [DEPT_CODE],[STOCK_CODE],[SPARE_PART_CODE],[UNIT],[CREATE_DATE],YEAR([CREATE_DATE]) AS [YEAR],MONTH([CREATE_DATE]) AS [MONTH],[USER_CREATE]
						FROM @A_DATA

						OPEN cursorInventory

						FETCH NEXT FROM cursorInventory
						INTO @A_DEPT_CODE,@A_STOCK_CODE,@A_SPARE_PART_CODE,@A_UNIT,@A_DATE,@A_YEAR,@A_MONTH,@A_USER_CREATE

						IF @A_USER_CREATE = '' OR @A_USER_CREATE IS NULL 
							SET @A_USER_CREATE = @A_USER

						WHILE @@FETCH_STATUS = 0
							BEGIN

								IF(@A_DATE <= GETDATE())
									BEGIN
										DECLARE @CountMonth int = DATEDIFF(month,@A_DATE,GETDATE())

										WHILE @CountMonth >= 0
										  BEGIN TRY
										        DECLARE @newDate date = DATEADD(month,-@CountMonth,GETDATE())
												DECLARE @year nvarchar(4) = YEAR(@newDate)
												DECLARE @month nvarchar(2) = MONTH(@newDate)

												EXEC [dbo].[PKG_BUSINESS_CACULATOR_INVENTORY@CALL] 
													 @A_DEPARTMENT = @A_DEPT_CODE,
													 @A_STOCK = @A_STOCK_CODE,
													 @A_SPARE_PART_CODE = @A_SPARE_PART_CODE,
													 @A_UNIT = @A_UNIT,
													 @A_DATE = @newDate,
													 @A_YEAR = @year,
													 @A_MONTH = @month,
													 @A_USER = @A_USER_CREATE,
													 @N_RETURN =@N_RETURN OUT,
													 @V_RETURN = @V_RETURN OUT;

													 IF @N_RETURN <> 0 
														THROW @N_RETURN, @V_RETURN, 1;

												SET @CountMonth = @CountMonth - 1
										  END TRY
										  BEGIN CATCH
												THROW;
										  END CATCH
									END
								
								FETCH NEXT FROM cursorInventory
								INTO @A_DEPT_CODE,@A_STOCK_CODE,@A_SPARE_PART_CODE,@A_UNIT,@A_DATE,@A_YEAR,@A_MONTH,@A_USER_CREATE
							END

					CLOSE cursorInventory
					DEALLOCATE cursorInventory
				END
		END

	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
	COMMIT TRAN;
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
  ROLLBACK TRAN;
END CATCH

