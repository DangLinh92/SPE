SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_LOCATION_SPAREPART@INSERT_ BATCH](
@A_DEPARTMENT_CODE             NVARCHAR(50),
@A_STOCK                       VARCHAR(50),
@A_DATA                       SPAREPART_LOCATION_TYPE1 READONLY,
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		 --   SET NOCOUNT OFF;  
			--INSERT INTO [dbo].[EWIP_SPAREPART_LOCATION]
   --         SELECT 
			--	[SPARE_PART_CODE],
			--	[LOCATION_CODE],
			--	[CONDITION_CODE],
			--	CAST([IS_WAITE] AS bit),
			--	CAST([QUANTITY] AS INT),
			--	@A_DEPARTMENT_CODE AS [DEPT_CODE]
			--	,@A_STOCK AS [STOCK_CODE]
			--	,CASE 
			--	     WHEN [LOCATION_CODE] = '' OR [LOCATION_CODE] IS NULL THEN  CASE 
			--		                                                                WHEN [CONDITION_CODE] = 'NG' THEN [SPARE_PART_CODE]+'.NG'
			--																		ELSE [SPARE_PART_CODE]
			--																	END
			--		 ELSE 
			--		     CASE  
			--			      WHEN [CONDITION_CODE] = 'NG' THEN [SPARE_PART_CODE]+'.'+[LOCATION_CODE]+'.NG'
			--				  ELSE [SPARE_PART_CODE]+'.'+[LOCATION_CODE]
			--			END
			--	END
			--	,
			--	[UNIT_ID] 
			--FROM @A_DATA 


			MERGE [dbo].[EWIP_SPAREPART_LOCATION] AS TARGET
			USING @A_DATA AS SOURCE
			ON (
			    TARGET.[SPARE_PART_CODE] = SOURCE.SPARE_PART_CODE AND 
				TARGET.[DEPT_CODE] = @A_DEPARTMENT_CODE AND 
				TARGET.[STOCK_CODE] = @A_STOCK AND
				TARGET.[UNIT_ID] = SOURCE.[UNIT_ID] AND
				TARGET.[CONDITION_CODE] = SOURCE.[CONDITION_CODE] AND
				TARGET.[EXPIRED_DATE] = SOURCE.[EXPIRED_DATE] AND
				TARGET.TIME_IN = SOURCE.TIME_IN 
				)
			WHEN MATCHED AND (TARGET.[LOCATION_CODE] = SOURCE.[LOCATION_CODE] AND TARGET.[LOCATION_CODE] <> '') OR ((TARGET.[LOCATION_CODE] = '' OR TARGET.[LOCATION_CODE] IS NULL) AND (SOURCE.[LOCATION_CODE] = '' OR SOURCE.[LOCATION_CODE] IS NULL))
			   THEN UPDATE SET TARGET.[QUANTITY] = TARGET.[QUANTITY] + CAST(SOURCE.[QUANTITY] AS float)
			WHEN NOT MATCHED BY TARGET
			   THEN INSERT([SPARE_PART_CODE],[LOCATION_CODE],[CONDITION_CODE],[IS_WAITE],[QUANTITY],[DEPT_CODE],[STOCK_CODE],[BARCODE],[UNIT_ID],[EXPIRED_DATE],TIME_IN)
			        VALUES (SOURCE.[SPARE_PART_CODE],
					        SOURCE.[LOCATION_CODE],
							SOURCE.[CONDITION_CODE],
							CAST(SOURCE.[IS_WAITE] AS bit),
							CAST(SOURCE.[QUANTITY] AS float),
							@A_DEPARTMENT_CODE,
							@A_STOCK,
							[dbo].[GETBARCODE](SOURCE.[LOCATION_CODE],SOURCE.[SPARE_PART_CODE],SOURCE.[CONDITION_CODE]),
							SOURCE.[UNIT_ID], cast(SOURCE.[EXPIRED_DATE] as date),cast(SOURCE.[TIME_IN] as date));
		END

	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH
GO