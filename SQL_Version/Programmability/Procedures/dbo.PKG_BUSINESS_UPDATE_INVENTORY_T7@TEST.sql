SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_UPDATE_INVENTORY_T7@TEST](
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  
			DECLARE @SPARE_PART_CODE NVARCHAR(50)
			DECLARE @QUANTITY_REAL FLOAT
			DECLARE @UNIT NVARCHAR(50)
			DECLARE @QUANTITY_IN FLOAT
			DECLARE @QUANTITY_OUT FLOAT
			DECLARE @QUANTITY_REAL_T7 FLOAT
			

			DECLARE cursorInventory CURSOR FOR
			SELECT [SPARE_PART_CODE],[QUANTITY_REAL],UNIT FROM [dbo].[EWIP_INVENTORY_BY_TIME]  where MONTH = 8

			OPEN cursorInventory

			FETCH NEXT FROM cursorInventory
			INTO @SPARE_PART_CODE,@QUANTITY_REAL,@UNIT

			
			WHILE @@FETCH_STATUS = 0
				BEGIN
					
					SET @QUANTITY_IN = 0
					SET @QUANTITY_OUT = 0
					SET @QUANTITY_REAL_T7 = 0
					PRINT @SPARE_PART_CODE
					PRINT @QUANTITY_REAL
					PRINT @UNIT

					SELECT @QUANTITY_IN = SUM([dbo].[CONVERT_UNIT](UNIT,'PACK',@SPARE_PART_CODE,'SMT')*QUANTITY)
					FROM EWIP_HISTORY_INVENTORY 
					where MONTH = 8 AND IN_OUT = 'IN'  AND SPARE_PART_CODE = @SPARE_PART_CODE
					GROUP BY SPARE_PART_CODE

					PRINT @QUANTITY_IN

					SELECT @QUANTITY_OUT = SUM([dbo].[CONVERT_UNIT](UNIT,'PACK',@SPARE_PART_CODE,'SMT')*QUANTITY)
					FROM EWIP_HISTORY_INVENTORY 
					where MONTH = 8 AND IN_OUT = 'OUT'  AND SPARE_PART_CODE = @SPARE_PART_CODE
					GROUP BY SPARE_PART_CODE

					PRINT @QUANTITY_OUT

					SET @QUANTITY_REAL_T7 = [dbo].[CONVERT_UNIT](@UNIT,'PACK',@SPARE_PART_CODE,'SMT')*ISNULL(@QUANTITY_REAL,0) + ISNULL(@QUANTITY_OUT,0) - ISNULL(@QUANTITY_IN,0)

					PRINT @QUANTITY_REAL_T7

					UPDATE [dbo].[EWIP_INVENTORY_BY_TIME]
					SET [QUANTITY_REAL] = [dbo].[CONVERT_UNIT]('PACK',UNIT,@SPARE_PART_CODE,'SMT')*@QUANTITY_REAL_T7
					WHERE SPARE_PART_CODE = @SPARE_PART_CODE AND MONTH = 7
					
					FETCH NEXT FROM cursorInventory
					INTO @SPARE_PART_CODE,@QUANTITY_REAL,@UNIT
				END
			CLOSE cursorInventory
			DEALLOCATE cursorInventory
       END
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH
GO