SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_LOCATION_SPAREPART@MOVE_SPARE_PART_TO_LOCATION](
@A_STT        INT,
@A_SPARE_PART_CODE NVARCHAR(50),
@A_LOCATION_OLD    NVARCHAR(50),
@A_LOCATION_NEW    NVARCHAR(50),
@A_CONDITION       VARCHAR(50),
@A_QUANTITY        FLOAT,
@A_DEPART_MENT     NVARCHAR(50),
@A_STOCK           VARCHAR(50),
@A_BARCODE         NVARCHAR(100),
@A_UNIT            VARCHAR(20),
@A_EXPIRED_DATE    NVARCHAR(50),
@A_TIME_IN         NVARCHAR(50),
@A_USER			   NVARCHAR(50),
@A_PO_NO           NVARCHAR(50),
@N_RETURN					 int OUTPUT,
@V_RETURN					 NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  

			IF TRIM(@A_LOCATION_NEW) != TRIM(@A_LOCATION_OLD)
			  BEGIN
			DECLARE @CHECK int;
			DECLARE @CHECK1 int;
			DECLARE @IS_WAITE BIT;
			DECLARE @QUANTITY_OLD float;
			DECLARE @UNIT_OLD nvarchar(50);

			SELECT @CHECK = COUNT(*) 
			FROM [EWIP_SPAREPART_LOCATION] 
			WHERE ID = @A_STT

			SELECT @CHECK1 = COUNT(*) 
			FROM [EWIP_SPAREPART_LOCATION] 
			WHERE
				ISNULL(LOCATION_CODE,'') = ISNULL(@A_LOCATION_NEW ,'')
				AND SPARE_PART_CODE = @A_SPARE_PART_CODE
				AND CONDITION_CODE = @A_CONDITION
				AND DEPT_CODE =@A_DEPART_MENT 
				AND STOCK_CODE = @A_STOCK
				AND [EXPIRED_DATE] = CAST(@A_EXPIRED_DATE AS date)
				AND [TIME_IN] = CAST(@A_TIME_IN as date)
				AND ISNULL(PO_NO,'') = ISNULL(@A_PO_NO,'')

			SELECT @QUANTITY_OLD = QUANTITY,@UNIT_OLD = UNIT_ID FROM [EWIP_SPAREPART_LOCATION] WHERE ID = @A_STT

			IF [dbo].[CONVERT_UNIT](@A_UNIT,@UNIT_OLD,@A_SPARE_PART_CODE,@A_DEPART_MENT) * @A_QUANTITY <= @QUANTITY_OLD
			  BEGIN
					IF @CHECK > 0
						BEGIN
								-- update quantity in old location
								UPDATE [EWIP_SPAREPART_LOCATION]
								SET [QUANTITY] = [QUANTITY] - [dbo].[CONVERT_UNIT](@A_UNIT,UNIT_ID,@A_SPARE_PART_CODE,@A_DEPART_MENT) * @A_QUANTITY
								WHERE ID = @A_STT

								IF [dbo].[CONVERT_UNIT](@A_UNIT,@UNIT_OLD,@A_SPARE_PART_CODE,@A_DEPART_MENT) * @A_QUANTITY = @QUANTITY_OLD
								    BEGIN
											DELETE [EWIP_SPAREPART_LOCATION] WHERE ID = @A_STT
									END

								IF @CHECK1 > 0
										BEGIN
											UPDATE [EWIP_SPAREPART_LOCATION]
											SET [QUANTITY] = [QUANTITY] + [dbo].[CONVERT_UNIT](@A_UNIT,UNIT_ID,@A_SPARE_PART_CODE,@A_DEPART_MENT) * @A_QUANTITY
											WHERE
													ISNULL(LOCATION_CODE,'') = ISNULL(@A_LOCATION_NEW,'')
													AND SPARE_PART_CODE = @A_SPARE_PART_CODE
													AND CONDITION_CODE = @A_CONDITION
													AND DEPT_CODE =@A_DEPART_MENT 
													AND STOCK_CODE = @A_STOCK
													AND [EXPIRED_DATE] = CAST(@A_EXPIRED_DATE AS date)
													AND [TIME_IN] = CAST(@A_TIME_IN as date)
													AND ISNULL(PO_NO,'') = ISNULL(@A_PO_NO,'')
										END
								ELSE 
										BEGIN
												IF @A_LOCATION_NEW = '' OR @A_LOCATION_NEW IS NULL
													set @IS_WAITE = 'True'
												ELSE 
													set @IS_WAITE = 'False' 

												INSERT INTO [EWIP_SPAREPART_LOCATION]
												VALUES(@A_SPARE_PART_CODE,ISNULL(@A_LOCATION_NEW,''),@A_CONDITION,@IS_WAITE,@A_QUANTITY,@A_DEPART_MENT,@A_STOCK,@A_BARCODE,@A_UNIT,CAST(@A_EXPIRED_DATE AS date),CAST(@A_TIME_IN as date),ISNULL(@A_PO_NO,''))
										END

								INSERT INTO [dbo].[EWIP_SPAREPART_LOCATION_TRANSACTION]
								VALUES(@A_SPARE_PART_CODE,ISNULL(@A_LOCATION_OLD,''),ISNULL(@A_LOCATION_NEW,''),@A_CONDITION,@A_QUANTITY,@A_DEPART_MENT,@A_STOCK,@A_UNIT,@A_EXPIRED_DATE,@A_TIME_IN,GETDATE(),@A_USER,ISNULL(@A_PO_NO,''))
						END
			  END

		END
		END
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH
GO
