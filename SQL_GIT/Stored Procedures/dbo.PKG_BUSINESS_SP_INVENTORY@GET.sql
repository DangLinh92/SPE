SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_SP_INVENTORY@GET](
@A_DEPARTMENT		NVARCHAR(50),
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    
		    DECLARE @PACK_UNIT NVARCHAR(10) = 'PACK';
			DECLARE @CURRENT_DATE DATE = GETDATE();

			SELECT inv.[SPARE_PART_CODE] AS CODE,sp.NAME_VI,sp.NAME_KR,sp.SPECIFICATIONS as SPECIFICATION,
			     ISNULL(inv.[QUANTITY],0) AS [QUANTITY],
				  ISNULL(inv.QUANTITY_REAL,0) as QUANTITY_REAL,
			     (ISNULL(inv.[QUANTITY],0) - ISNULL(inv.QUANTITY_REAL,0)) as DIFFERENCE_QUANTITY,

				 ISNULL(SUB.SUB_QTY_NEED_BUY,0) *[dbo].[CONVERT_UNIT](SUB.SUB_UNIT,inv.UNIT_IN_CODE,INV.SPARE_PART_CODE,@A_DEPARTMENT) AS SUB_QTY_NEED_BUY,-- CASE WHEN ISNULL(SUB.SUB_DATE_NEED_FINISH,'') = '1900-01-01' THEN NULL ELSE SUB.SUB_DATE_NEED_FINISH END AS SUB_DATE_NEED_FINISH,

			     [dbo].[CONVERT_UNIT](mins.UNIT_CODE,inv.UNIT_IN_CODE,inv.SPARE_PART_CODE,@A_DEPARTMENT)* ISNULL(mins.MIN_STOCK,0) AS MIN_STOCK ,
				 CASE WHEN ISNULL(BM.WORKING_A_MONTH,BOM.WORKING_A_MONTH) IS NULL THEN NULL ELSE ROUND(([dbo].[CONVERT_UNIT](inv.UNIT_IN_CODE,@PACK_UNIT,inv.SPARE_PART_CODE,@A_DEPARTMENT)* ISNULL(inv.[QUANTITY],0)/ (ISNULL(BM.WORKING_A_MONTH,BOM.WORKING_A_MONTH)/ISNULL(BM.WORKING_DAY_NUMBER,BOM.WORKING_DAY_NUMBER)))/7,1) END AS REMAIN_WEEK,
				 inv.UNIT_IN_CODE as UNIT,V.NAME as VENDER_NAME,inv.STOCK_CODE as KHO,inv.ID,mins.[RATE_ALARM],ST.NAME TYPENAME
			FROM [dbo].[EWIP_SPAREPART_INVENTORY] inv
			INNER JOIN [dbo].[EWIP_SPARE_PART] sp ON inv.SPARE_PART_CODE = sp.CODE AND inv.DEPT_CODE = sp.SP_DEPT_CODE
			LEFT JOIN [dbo].[EWIP_SPAREPART_TYPE] ST ON SP.TYPE = ST.CODE
			LEFT JOIN [dbo].[EWIP_SETUP_MINSTOCK] mins ON inv.SPARE_PART_CODE = mins.SPARE_PART_CODE AND inv.DEPT_CODE = mins.DEPT_CODE AND inv.STOCK_CODE =mins.STOCK_CODE
			LEFT JOIN [dbo].[EWIP_BOM_BY_MONTH] BM ON INV.SPARE_PART_CODE = BM.SPARE_PART_CODE AND INV.DEPT_CODE = BM.DEPT_CODE AND BM.MONTH = MONTH(@CURRENT_DATE) AND BM.YEART = YEAR(@CURRENT_DATE)
			LEFT JOIN [dbo].[EWIP_BOM] BOM ON BOM.SPARE_PART_CODE = INV.SPARE_PART_CODE AND BOM.DEPT_CODE = INV.DEPT_CODE
			LEFT JOIN EWIP_VENDER V ON SP.VENDER_ID = V.VENDER_ID
			LEFT JOIN  (SELECT SPAREPART_CODE AS SUB_CODE,SUM(ISNULL(QUANTITY_NEED_BUY,0)*[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,SPAREPART_CODE,@A_DEPARTMENT)) AS SUB_QTY_NEED_BUY,'PACK' AS SUB_UNIT--,DATE_NEED_FINISH AS SUB_DATE_NEED_FINISH 
			             FROM [dbo].[EWIP_MRP] 
						 WHERE [DEPT_CODE] = @A_DEPARTMENT AND (STATUS NOT IN('COMPLETE','RECEIVE','CANCEL','NEW','WAIT_ACCEPT','ACCEPT') AND STATUS IS NOT NULL)
						 GROUP BY SPAREPART_CODE--,DATE_NEED_FINISH
						) SUB ON SUB.SUB_CODE = inv.SPARE_PART_CODE
			WHERE inv.DEPT_CODE = @A_DEPARTMENT
			GROUP BY inv.ID,inv.[SPARE_PART_CODE] ,sp.NAME_VI,sp.NAME_KR,sp.SPECIFICATIONS ,inv.UNIT_IN_CODE,inv.[QUANTITY],inv.QUANTITY_REAL ,mins.MIN_STOCK,V.NAME ,inv.STOCK_CODE,mins.[RATE_ALARM],mins.UNIT_CODE,ISNULL(BM.WORKING_A_MONTH,BOM.WORKING_A_MONTH),ISNULL(BM.WORKING_DAY_NUMBER,BOM.WORKING_DAY_NUMBER),ST.NAME,SUB.SUB_QTY_NEED_BUY,SUB.SUB_UNIT--,SUB.SUB_DATE_NEED_FINISH
			ORDER BY ([dbo].[CONVERT_UNIT](inv.UNIT_IN_CODE,@PACK_UNIT,inv.SPARE_PART_CODE,@A_DEPARTMENT)* ISNULL(inv.[QUANTITY],0) - [dbo].[CONVERT_UNIT](mins.UNIT_CODE,@PACK_UNIT,inv.SPARE_PART_CODE,@A_DEPARTMENT)* ISNULL(mins.MIN_STOCK,-9999999));
			
			SELECT sp.CODE,sp.NAME_VI
			FROM EWIP_SPARE_PART sp 
			     INNER JOIN EWIP_SPARE_PART_DEPT spd ON sp.CODE = spd.SPARE_PART_CODE AND spd.DEPT_CODE = sp.SP_DEPT_CODE
			where sp.SP_DEPT_CODE = @A_DEPARTMENT
			ORDER BY SP.ID DESC;

			SELECT CODE,NAME FROM [dbo].[EWIP_STOCK] WHERE DEPT_CODE = @A_DEPARTMENT;

			SELECT CODE,NAME FROM [dbo].[EWIP_UNITS];

			SELECT OPR.PO_ID,[TITLE] 
			FROM [dbo].[EWIP_ORDER] OD INNER JOIN [dbo].[EWIP_ORDER_PR] OPR ON OD.PO_ID_TEMP = OPR.PO_ID_TEMP
			WHERE OPR.DEPT_CODE = @A_DEPARTMENT;

			SELECT [CODE],[NAME] FROM [dbo].[EWIP_TYPE_IN_OUT];

			SELECT [FROM],[TO],[RATE] 
			FROM  [dbo].[EWIP_EXCHANGE_RATE]
			WHERE [FROM] = 'USD' AND [TO] = 'VN';

		END;

	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH;
GO
