SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_CHART_IN_OUT_STOCK@GETDATA](
@A_TYPE_VALUE       NVARCHAR(50),
@A_TYPE_VIEW        NVARCHAR(50),
@A_DEPARTMENT		NVARCHAR(50),
@A_SPARE_PART_CODE  NVARCHAR(MAX),
@A_FROM             NVARCHAR(50),
@A_TO               NVARCHAR(50),
@A_MONTH_COMPARE    NVARCHAR(50),
@A_KRW_VND          NVARCHAR(50),
@A_CATEGORY         nvarchar(50),
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  

			DECLARE @VND_KRW FLOAT = 1
			DECLARE @K_POINT FLOAT = 1000

		    IF @A_KRW_VND = 'KRW'
				BEGIN
					SELECT @VND_KRW = 1/RATE FROM [dbo].[EWIP_EXCHANGE_RATE] WHERE [FROM] = 'KRW' AND [TO] = 'VND' ORDER BY VALID_TIME DESC
			    END
			ELSE
				 BEGIN
						  SET @VND_KRW = 1
			    END

		IF @A_CATEGORY = '1' -- SPAREPART CODE
		    BEGIN
					SET @VND_KRW = @VND_KRW*0.001 -- rut gon tien xuong don vi nghin dong

					IF @A_TYPE_VALUE = 'M' BEGIN  -- MONEY
            		IF @A_TYPE_VIEW = 'MONTH' BEGIN

						DECLARE @START_MONTH DATE 
						DECLARE @END_MONTH DATE

						SET @START_MONTH = DATEADD(month, DATEDIFF(month, 0, @A_FROM), 0)
						SET @END_MONTH = EOMONTH(@A_TO)

						PRINT @START_MONTH
						PRINT @END_MONTH

						IF @A_SPARE_PART_CODE != '' AND @A_SPARE_PART_CODE IS NOT NULL
						   BEGIN
								SELECT IN_VALUES_VN*@VND_KRW AS IN_VALUE,OUT_VALUES_VN*@VND_KRW AS OUT_VALUE,INVENTORY_VALUES_VN*@VND_KRW AS INVENTORY,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE,0 AS MIN_STOCK,SPARE_PART_CODE
								FROM [dbo].[EWIP_INVENTORY_VALUES_BY_TIME]
								WHERE [DATE] BETWEEN @START_MONTH AND @END_MONTH AND DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) --@A_SPARE_PART_CODE
								ORDER BY SPARE_PART_CODE,DATE ASC
								
						    END 
						ELSE
						    BEGIN
							  
									SELECT SUM(ISNULL(IN_VALUES_VN,0))*@VND_KRW AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0))*@VND_KRW AS OUT_VALUE,SUM(ISNULL(INVENTORY_VALUES_VN,0))*@VND_KRW AS INVENTORY,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE,0 AS MIN_STOCK,'T' AS SPARE_PART_CODE
									FROM [dbo].[EWIP_INVENTORY_VALUES_BY_TIME]
									WHERE [DATE] BETWEEN @START_MONTH AND @END_MONTH AND DEPT_CODE = @A_DEPARTMENT
									GROUP BY FORMAT([DATE],'yyyyMM'),[MONTH]
									ORDER BY FORMAT([DATE],'yyyyMM') ASC
									 PRINT 'OK'
							END

						IF @A_DEPARTMENT = 'SMT'
						   BEGIN
						   PRINT 'OK1'
									SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE
									FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
									WHERE [DATE] BETWEEN  @START_MONTH AND @END_MONTH 
									GROUP BY FORMAT ([DATE],'yyyyMM'),[MONTH]
									ORDER BY [MONTH] asc

									;WITH cte AS
									(
									SELECT SUM(WHC_PLAN_POINT) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
									FROM [dbo].[EWIP_GOC_PLAN_SMT]
									WHERE CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE) BETWEEN @START_MONTH AND @END_MONTH 
									GROUP BY FORMAT (CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK])
									SELECT PLANT,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE FROM cte WHERE RowNum = 1 ORDER BY [MONTH] ASC
									
						  END
						  ELSE
								 BEGIN
							   	 		SELECT  '' AS PRODUCT,
							   	 				'' AS TIME_VALUE
							   	 		WHERE @@ROWCOUNT < 0
							   	 
							   	 		SELECT  '' AS PLANT,
							   	 				'' AS TIME_VALUE
							   	 		WHERE @@ROWCOUNT < 0
								  END
					 END
					 ELSE IF @A_TYPE_VIEW = 'DAY'
					      BEGIN
									IF @A_SPARE_PART_CODE != '' AND @A_SPARE_PART_CODE IS NOT NULL
									   BEGIN
											SELECT IN_VALUES_VN*@VND_KRW AS IN_VALUE,OUT_VALUES_VN*@VND_KRW AS OUT_VALUE,INVENTORY_VALUES_VN*@VND_KRW AS INVENTORY,FORMAT([DATE],'dd/MM') AS TIME_VALUE,0 AS MIN_STOCK,SPARE_PART_CODE
											FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
											WHERE [DATE] BETWEEN CAST(@A_FROM AS DATE) AND CAST(@A_TO AS DATE) AND DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) --@A_SPARE_PART_CODE
											ORDER BY SPARE_PART_CODE,DATE ASC
									  END
									ELSE
									   BEGIN
											SELECT SUM(IN_VALUES_VN*@VND_KRW) AS IN_VALUE,SUM(OUT_VALUES_VN*@VND_KRW) AS OUT_VALUE,SUM(INVENTORY_VALUES_VN*@VND_KRW) AS INVENTORY,FORMAT([DATE],'dd/MM') AS TIME_VALUE,0 AS MIN_STOCK,'T' AS SPARE_PART_CODE
											FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
											WHERE [DATE] BETWEEN CAST(@A_FROM AS DATE) AND CAST(@A_TO AS DATE) AND DEPT_CODE = @A_DEPARTMENT
											GROUP BY [DATE]
											ORDER BY [DATE] ASC
									   END

									IF @A_DEPARTMENT = 'SMT'
										 BEGIN
												SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,FORMAT([DATE],'dd/MM') AS TIME_VALUE
												FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
												WHERE [DATE] BETWEEN CAST(@A_FROM AS DATE) AND CAST(@A_TO AS DATE) 
												GROUP BY [DATE]
												ORDER BY [DATE] ASC

							   					SELECT  '' AS PLANT,
							   							'' AS TIME_VALUE
							   					WHERE @@ROWCOUNT < 0
										END
										  ELSE
												BEGIN
							   							SELECT  '' AS PRODUCT,
							   									'' AS TIME_VALUE
							   							WHERE @@ROWCOUNT < 0
							   
							   							SELECT  '' AS PLANT,
							   									'' AS TIME_VALUE
							   							WHERE @@ROWCOUNT < 0
												 END
						  END
					 ELSE IF @A_TYPE_VIEW = 'WEEK'
					        BEGIN
									DECLARE @WEEK_START int
									DECLARE @WEEK_END INT
									DECLARE @INVENTORY_WEEK_M TABLE(WEEK INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

									SET @WEEK_START = CAST(@A_FROM AS int)
									SET @WEEK_END = CAST(@A_TO AS int)

									IF @A_SPARE_PART_CODE != '' AND @A_SPARE_PART_CODE IS NOT NULL
									   BEGIN
											 ;WITH cts AS(
											 SELECT [WEEK],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[WEEK] ORDER BY DATE DESC) AS rn
												FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
												WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START AND @WEEK_END AND YEAR([DATE]) = YEAR(GETDATE())
												)
											    INSERT INTO @INVENTORY_WEEK_M
												SELECT [WEEK],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

											   SELECT SUB.IN_VALUE*@VND_KRW AS IN_VALUE,SUB.OUT_VALUE*@VND_KRW AS OUT_VALUE,IM.INVENTORY*@VND_KRW AS INVENTORY,CAST(ISNULL(SUB.WEEK,IM.WEEK) AS NVARCHAR) AS TIME_VALUE,0 AS MIN_STOCK,SUB.SPARE_PART_CODE  
											   FROM
											    (SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[WEEK],SPARE_PART_CODE-- @INVENTORY_WEEK_M AS INVENTORY,CAST([WEEK] AS NVARCHAR) AS TIME_VALUE
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START AND @WEEK_END AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY SPARE_PART_CODE,[WEEK]
												) SUB 
												 FULL JOIN @INVENTORY_WEEK_M IM ON SUB.WEEK = IM.WEEK AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
												 ORDER BY IM.SPARE_PART_CODE,ISNULL(SUB.WEEK,IM.WEEK) ASC
									   END
									  ELSE
									     BEGIN
												 ;WITH cts AS(
											    SELECT [WEEK],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[WEEK] ORDER BY DATE DESC) AS rn
												FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
												WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START AND @WEEK_END AND YEAR([DATE]) = YEAR(GETDATE())
												)
											    INSERT INTO @INVENTORY_WEEK_M
												SELECT [WEEK],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

												SELECT SUB.IN_VALUE*@VND_KRW AS IN_VALUE,SUB.OUT_VALUE*@VND_KRW AS OUT_VALUE,IM.INVENTORY*@VND_KRW AS INVENTORY,CAST(ISNULL(SUB.WEEK,IM.WEEK) AS NVARCHAR) AS TIME_VALUE,0 AS MIN_STOCK,'T' AS SPARE_PART_CODE
											   FROM
											    (SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[WEEK]
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START AND @WEEK_END AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY [WEEK]
												) SUB 
												 FULL JOIN (SELECT WEEK,SUM(ISNULL(INVENTORY,0)) AS INVENTORY FROM @INVENTORY_WEEK_M GROUP BY WEEK) IM ON SUB.WEEK = IM.WEEK
												 ORDER BY ISNULL(SUB.WEEK,IM.WEEK) ASC
										 END
									IF @A_DEPARTMENT = 'SMT'
										 BEGIN
												SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,CAST([WEEK] AS NVARCHAR) AS TIME_VALUE
												FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
												WHERE [WEEK] BETWEEN  @WEEK_START AND @WEEK_END AND YEAR([DATE]) = YEAR(GETDATE())
												GROUP BY [WEEK]
												ORDER BY [WEEK] ASC

												SELECT  '' AS PLANT,
							   							'' AS TIME_VALUE
							   					WHERE @@ROWCOUNT < 0
										 END
										  ELSE
												BEGIN
							   							SELECT  '' AS PRODUCT,
							   									'' AS TIME_VALUE
							   							WHERE @@ROWCOUNT < 0
							   
							   							SELECT  '' AS PLANT,
							   									'' AS TIME_VALUE
							   							WHERE @@ROWCOUNT < 0
												 END
							END
					ELSE IF @A_TYPE_VIEW = 'QUARTER'
									BEGIN
										DECLARE @INVENTORY_QUARTER_M TABLE(QUARTER INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

										IF @A_SPARE_PART_CODE != '' AND @A_SPARE_PART_CODE IS NOT NULL
											BEGIN
													;WITH cts AS(
														 SELECT [QUARTER],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[QUARTER] ORDER BY DATE DESC) AS rn
															FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
															WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
															)
														 INSERT INTO @INVENTORY_QUARTER_M
														 SELECT [QUARTER],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1


													SELECT SUB.IN_VALUE*@VND_KRW AS IN_VALUE,SUB.OUT_VALUE*@VND_KRW AS OUT_VALUE,IM.INVENTORY*@VND_KRW AS INVENTORY,[dbo].[GET_NAME_CHAR_QUARTER](ISNULL(SUB.[QUARTER],IM.[QUARTER])) AS TIME_VALUE,0 AS MIN_STOCK,SUB.SPARE_PART_CODE  
													FROM
													(
													SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[QUARTER],SPARE_PART_CODE --, SUM(ISNULL(INVENTORY_VALUES_VN,0)) AS INVENTORY,[dbo].[GET_NAME_CHAR_QUARTER]([QUARTER]) AS TIME_VALUE
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY SPARE_PART_CODE,[QUARTER]
													--ORDER BY [QUARTER]
													) SUB 
													 FULL JOIN @INVENTORY_QUARTER_M IM ON SUB.[QUARTER] = IM.[QUARTER] AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
													ORDER BY IM.SPARE_PART_CODE,ISNULL(SUB.[QUARTER],IM.[QUARTER]) ASC
											 END
										 ELSE
										      BEGIN
													;WITH cts AS(
														 SELECT [QUARTER],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[QUARTER] ORDER BY DATE DESC) AS rn
															FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
															WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
															)
														 INSERT INTO @INVENTORY_QUARTER_M
														 SELECT [QUARTER],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

													SELECT SUB.IN_VALUE*@VND_KRW AS IN_VALUE,SUB.OUT_VALUE*@VND_KRW AS OUT_VALUE,IM.INVENTORY*@VND_KRW AS INVENTORY,[dbo].[GET_NAME_CHAR_QUARTER](ISNULL(SUB.[QUARTER],IM.[QUARTER])) AS TIME_VALUE,0 AS MIN_STOCK,'T' AS SPARE_PART_CODE
													FROM
													(
													SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[QUARTER]
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY [QUARTER]
													) SUB 
													 FULL JOIN (SELECT QUARTER,SUM(ISNULL(INVENTORY,0)) AS INVENTORY FROM @INVENTORY_QUARTER_M GROUP BY QUARTER)IM ON SUB.[QUARTER] = IM.[QUARTER]
													ORDER BY ISNULL(SUB.[QUARTER],IM.[QUARTER]) ASC
											  END
											IF @A_DEPARTMENT = 'SMT'
											 BEGIN
													SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,[dbo].[GET_NAME_CHAR_QUARTER](DATEPART(QUARTER, [DATE])) AS TIME_VALUE
													FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
													WHERE DATEPART(QUARTER, [DATE]) BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY DATEPART(QUARTER, [DATE])
													ORDER BY DATEPART(QUARTER, [DATE]) ASC

													DECLARE @LOCAL_DATA_QUARTER TABLE
													(
														PLANT FLOAT,
														QUARTERS INT
													)

													DECLARE @A_START_QUARTER DATE
													DECLARE @A_END_QUARTER DATE

													IF CAST(@A_FROM AS INT) = 1
													   BEGIN
															SET @A_START_QUARTER = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-01-01') AS DATE);
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER))
													   END
													ELSE IF  CAST(@A_FROM AS INT) = 2
													   BEGIN
															SET @A_START_QUARTER = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-04-01') AS DATE);
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER))
													   END
													ELSE IF  CAST(@A_FROM AS INT) = 3
													   BEGIN
															SET @A_START_QUARTER = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-07-01') AS DATE);
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER))
													   END
													 ELSE IF  CAST(@A_FROM AS INT) = 4
													   BEGIN
															SET @A_START_QUARTER = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-10-01') AS DATE);
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER))
													   END

													   IF CAST(@A_TO AS INT) = 1
													   BEGIN
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-01-01') AS DATE)))
													   END
													ELSE IF  CAST(@A_TO AS INT) = 2
													   BEGIN
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-04-01') AS DATE)))
													   END
													ELSE IF  CAST(@A_TO AS INT) = 3
													   BEGIN
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-07-01') AS DATE)))
													   END
													 ELSE IF  CAST(@A_TO AS INT) = 4
													   BEGIN
															SET @A_END_QUARTER = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-10-01') AS DATE)))
													   END

													;WITH cte AS
													(
														SELECT SUM(WHC_PLAN_POINT * 1000) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
														FROM [dbo].[EWIP_GOC_PLAN_SMT]
														WHERE CAST((CAST([YEAR_PLAN] AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE) BETWEEN @A_START_QUARTER AND @A_END_QUARTER AND [YEAR_PLAN] = YEAR(GETDATE())
														GROUP BY FORMAT (CAST((CAST([YEAR_PLAN] AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK]
													 )
													 INSERT INTO  @LOCAL_DATA_QUARTER
													 SELECT PLANT,[dbo].[GET_QUARTER_BY_MONTH]([MONTH])
													 FROM cte 
													 WHERE RowNum = 1 
													 ORDER BY [MONTH] ASC

													 SELECT SUM(PLANT)/@K_POINT AS PLANT,[dbo].[GET_NAME_CHAR_QUARTER](QUARTERS) AS TIME_VALUE
													 FROM @LOCAL_DATA_QUARTER
													 WHERE QUARTERS BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) 
													 GROUP BY QUARTERS
													 ORDER BY QUARTERS

											 END
											  ELSE
													BEGIN
							   								SELECT  '' AS PRODUCT,
							   										'' AS TIME_VALUE
							   								WHERE @@ROWCOUNT < 0
							   
							   								SELECT  '' AS PLANT,
							   										'' AS TIME_VALUE
							   								WHERE @@ROWCOUNT < 0
													 END
									END
            END
			ELSE IF @A_TYPE_VALUE = 'QTY' BEGIN
			    IF @A_TYPE_VIEW = 'MONTH' BEGIN

						DECLARE @START_MONTH1 DATE 
						DECLARE @END_MONTH1 DATE

						DECLARE @LOCAL_DATA_QTY_IN TABLE
						(
							SPARE_PART_CODE NVARCHAR(50),
							QTY FLOAT,
							MONTH INT,
							YEAR INT
						)

						DECLARE @LOCAL_DATA_QTY_OUT TABLE
						(
							SPARE_PART_CODE NVARCHAR(50),
							QTY FLOAT,
							MONTH INT,
							YEAR INT
						)

						DECLARE @LOCAL_DATA_QTY_INVENTORY TABLE
						(
							SPARE_PART_CODE NVARCHAR(50),
							QTY FLOAT,
							MONTH INT,
							YEAR INT
						)

						SET @START_MONTH1 = DATEADD(month, DATEDIFF(month, 0, @A_FROM), 0)
						SET @END_MONTH1 = EOMONTH(@A_TO)

						INSERT INTO @LOCAL_DATA_QTY_IN
						SELECT ehi.SPARE_PART_CODE,SUM((ISNULL(ehi.QUANTITY,0)- ISNULL(QUANTITY_NG,0)) * dbo.CONVERT_UNIT(ehi.UNIT,'PACK',ehi.SPARE_PART_CODE,@A_DEPARTMENT)) AS QTY,ehi.MONTH,EHI.YEAR
						FROM EWIP_HISTORY_INVENTORY ehi
						WHERE ehi.IN_OUT = 'IN' AND ehi.STATUS = 'COMPLETE' AND ehi.SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND ehi.DEPT_CODE = @A_DEPARTMENT AND ehi.DATE BETWEEN @START_MONTH1 AND @END_MONTH1
						GROUP BY ehi.DEPT_CODE,ehi.SPARE_PART_CODE,EHI.YEAR,ehi.MONTH
						ORDER BY ehi.SPARE_PART_CODE,EHI.YEAR,ehi.MONTH

						INSERT INTO @LOCAL_DATA_QTY_OUT
						SELECT ehi.SPARE_PART_CODE,SUM((ISNULL(ehi.QUANTITY,0)- ISNULL(QUANTITY_NG,0)) * dbo.CONVERT_UNIT(ehi.UNIT,'PACK',ehi.SPARE_PART_CODE,@A_DEPARTMENT)) AS QTY,ehi.MONTH,EHI.YEAR
						FROM EWIP_HISTORY_INVENTORY ehi
						WHERE ehi.IN_OUT = 'OUT' AND ehi.STATUS = 'COMPLETE' AND ehi.SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND ehi.DEPT_CODE = @A_DEPARTMENT AND ehi.DATE BETWEEN @START_MONTH1 AND @END_MONTH1
						GROUP BY ehi.DEPT_CODE,ehi.SPARE_PART_CODE,EHI.YEAR,ehi.MONTH
						ORDER BY ehi.SPARE_PART_CODE,EHI.YEAR,ehi.MONTH

						INSERT INTO @LOCAL_DATA_QTY_INVENTORY
						SELECT SUB.SPARE_PART_CODE,SUB.QTY- ISNULL(BL.QUANTITY,0) * dbo.CONVERT_UNIT(BL.UNIT_ID,'PACK',BL.SPARE_PART_CODE,@A_DEPARTMENT) AS QTY,SUB.[MONTH],SUB.[YEAR] 
						FROM(
						SELECT BT.SPARE_PART_CODE,SUM(ISNULL(BT.QUANTITY,0) * dbo.CONVERT_UNIT(UNIT,'PACK',BT.SPARE_PART_CODE,@A_DEPARTMENT)) AS QTY,[MONTH],[YEAR]
						FROM [dbo].[EWIP_INVENTORY_BY_TIME] BT
						WHERE BT.SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND BT.DEPT_CODE = @A_DEPARTMENT AND [DATE] BETWEEN @START_MONTH1 AND @END_MONTH1
						GROUP BY BT.DEPT_CODE,BT.SPARE_PART_CODE,[YEAR],[MONTH]
						) SUB 
						LEFT JOIN [dbo].[EWIP_SPARE_PART_LOCATION_BASE_LINE] BL ON BL.SPARE_PART_CODE = SUB.SPARE_PART_CODE AND BL.DEPT_CODE = @A_DEPARTMENT AND SUB.[MONTH] = MONTH_BASE_LINE AND SUB.[YEAR] = YEAR_BASE_LINE AND BL.CONDITION_CODE = 'NG'
						ORDER BY SUB.SPARE_PART_CODE,SUB.[YEAR],SUB.[MONTH]

						SELECT IN_VALUE,OUT_VALUE,INVENTORY,TIME_VALUE,MIN_STOCK,SPARE_PART_CODE FROM(
						SELECT DISTINCT SUB.QTY_IN AS IN_VALUE,SUB.QTY_OUT AS OUT_VALUE,T.QTY AS INVENTORY, [dbo].[CONVERT_MONTH_STR](ISNULL(T.MONTH,SUB.MONTH)) AS TIME_VALUE ,ISNULL(B.MIN_STOCK_PACK,M.MIN_STOCK) AS MIN_STOCK,T.MONTH,T.YEAR,T.SPARE_PART_CODE
						FROM
						(
						SELECT ISNULL(STIN.SPARE_PART_CODE,SOUT.SPARE_PART_CODE) AS SPARE_PART_CODE,STIN.QTY AS QTY_IN,SOUT.QTY AS QTY_OUT,ISNULL(STIN.MONTH,SOUT.MONTH) AS MONTH,ISNULL(STIN.YEAR,SOUT.YEAR) AS YEAR
						FROM @LOCAL_DATA_QTY_IN STIN
						FULL JOIN @LOCAL_DATA_QTY_OUT SOUT ON STIN.SPARE_PART_CODE = SOUT.SPARE_PART_CODE AND STIN.MONTH = SOUT.MONTH AND STIN.YEAR = SOUT.YEAR) AS SUB
						FULL JOIN @LOCAL_DATA_QTY_INVENTORY T ON T.SPARE_PART_CODE = SUB.SPARE_PART_CODE AND T.MONTH = SUB.MONTH AND T.YEAR = SUB.YEAR
						LEFT JOIN [dbo].[EWIP_BOM_BY_MONTH] B ON B.MONTH = T.MONTH AND B.YEART = T.YEAR AND T.SPARE_PART_CODE = B.SPARE_PART_CODE AND B.DEPT_CODE = @A_DEPARTMENT
						LEFT JOIN [EWIP_SETUP_MINSTOCK] M ON M.SPARE_PART_CODE = T.SPARE_PART_CODE AND M.DEPT_CODE = @A_DEPARTMENT
						) SUB2
						ORDER BY SUB2.SPARE_PART_CODE,SUB2.YEAR ASC,SUB2.MONTH ASC

						IF @A_DEPARTMENT = 'SMT'
						   BEGIN
									SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE
									FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
									WHERE [DATE] BETWEEN  @START_MONTH1 AND @END_MONTH1 
									GROUP BY FORMAT ([DATE],'yyyyMM'),[MONTH]
									ORDER BY [MONTH] asc

									;WITH cte AS
									(
									SELECT SUM(WHC_PLAN_POINT) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
									FROM [dbo].[EWIP_GOC_PLAN_SMT]
									WHERE CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE) BETWEEN @START_MONTH1 AND @END_MONTH1 
									GROUP BY FORMAT (CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK])
									SELECT PLANT,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE FROM cte WHERE RowNum = 1 ORDER BY [MONTH] ASC
						  END
						  ELSE
							     BEGIN
							   			SELECT  '' AS PRODUCT,
							   					'' AS TIME_VALUE
							   			WHERE @@ROWCOUNT < 0
							   
							   			SELECT  '' AS PLANT,
							   					'' AS TIME_VALUE
							   			WHERE @@ROWCOUNT < 0
							      END
					 END
					 ELSE IF @A_TYPE_VIEW = 'DAY'
					      BEGIN
								    SELECT QUANTITY_IN AS IN_VALUE,QUANTITY_OUT AS OUT_VALUE,QUANTITY_INVENTORY AS INVENTORY,FORMAT([DATE],'dd/MM') AS TIME_VALUE,0 AS MIN_STOCK,SPARE_PART_CODE
									FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
									WHERE [DATE] BETWEEN CAST(@A_FROM AS DATE) AND CAST(@A_TO AS DATE) AND SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT
									ORDER BY SPARE_PART_CODE,DATE ASC

									IF @A_DEPARTMENT = 'SMT'
										 BEGIN
												SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,FORMAT([DATE],'dd/MM') AS TIME_VALUE
												FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
												WHERE [DATE] BETWEEN CAST(@A_FROM AS DATE) AND CAST(@A_TO AS DATE) 
												GROUP BY [DATE]
												ORDER BY [DATE] ASC

												SELECT  '' AS PLANT,
														'' AS TIME_VALUE
												WHERE @@ROWCOUNT < 0
										END
									ELSE
											   BEGIN
															SELECT  '' AS PRODUCT,
																	'' AS TIME_VALUE
															WHERE @@ROWCOUNT < 0

															SELECT  '' AS PLANT,
																	'' AS TIME_VALUE
															WHERE @@ROWCOUNT < 0
											    END
						  END
					 ELSE IF @A_TYPE_VIEW = 'WEEK'
					        BEGIN
							  --  
									DECLARE @WEEK_START1 int
									DECLARE @WEEK_END1 INT
									DECLARE @INVENTORY_WEEK_Q TABLE(WEEK INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

									SET @WEEK_START1 = CAST(@A_FROM AS int)
									SET @WEEK_END1 = CAST(@A_TO AS int)

									 ;WITH cts AS(
									 SELECT [WEEK],ISNULL(QUANTITY_INVENTORY,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[WEEK] ORDER BY DATE DESC) AS rn
										FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
										WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START1 AND @WEEK_END1 AND YEAR([DATE]) = YEAR(GETDATE())
										)
									    INSERT INTO @INVENTORY_WEEK_Q
										SELECT [WEEK],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

                                   SELECT SUB.IN_VALUE,SUB.OUT_VALUE,IM.INVENTORY,CAST(ISNULL(SUB.WEEK,IM.WEEK) AS NVARCHAR) AS TIME_VALUE  ,0 AS MIN_STOCK,SUB.SPARE_PART_CODE
								   FROM
								    (SELECT SUM(ISNULL(QUANTITY_IN,0)) AS IN_VALUE,SUM(ISNULL(QUANTITY_OUT,0)) AS OUT_VALUE,[WEEK],SPARE_PART_CODE-- @INVENTORY_WEEK_M AS INVENTORY,CAST([WEEK] AS NVARCHAR) AS TIME_VALUE
										FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
										WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START1 AND @WEEK_END1 AND YEAR([DATE]) = YEAR(GETDATE())
										GROUP BY SPARE_PART_CODE,[WEEK]
										) SUB 
									 LEFT JOIN @INVENTORY_WEEK_Q IM ON SUB.[WEEK] = IM.[WEEK] AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
									 ORDER BY SUB.SPARE_PART_CODE,ISNULL(SUB.WEEK,IM.WEEK)
								 
									IF @A_DEPARTMENT = 'SMT'
								 		 BEGIN
								 			SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,CAST([WEEK] AS NVARCHAR) AS TIME_VALUE
								 			FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
								 			WHERE [WEEK] BETWEEN  @WEEK_START1 AND @WEEK_END1 AND YEAR([DATE]) = YEAR(GETDATE())
								 			GROUP BY [WEEK]
								 			ORDER BY [WEEK] ASC

											SELECT  '' AS PLANT,
													'' AS TIME_VALUE
											WHERE @@ROWCOUNT < 0
								 		 END
										 ELSE
											   BEGIN
															SELECT  '' AS PRODUCT,
																	'' AS TIME_VALUE
															WHERE @@ROWCOUNT < 0

															SELECT  '' AS PLANT,
																	'' AS TIME_VALUE
															WHERE @@ROWCOUNT < 0
											   END
									END
						  ELSE IF @A_TYPE_VIEW = 'QUARTER'
									BEGIN

											DECLARE @INVENTORY_QUARTER_Q TABLE(QUARTER INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))
											;WITH cts AS(
												 SELECT [QUARTER],ISNULL(QUANTITY_INVENTORY,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[QUARTER] ORDER BY DATE DESC) AS rn
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													)
												 INSERT INTO @INVENTORY_QUARTER_Q
												 SELECT [QUARTER],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1


											SELECT SUB.IN_VALUE,SUB.OUT_VALUE,IM.INVENTORY,[dbo].[GET_NAME_CHAR_QUARTER](ISNULL(SUB.[QUARTER],IM.[QUARTER])) AS TIME_VALUE,0 AS MIN_STOCK,SUB.SPARE_PART_CODE
											FROM
											(
											SELECT SUM(ISNULL(QUANTITY_IN,0)) AS IN_VALUE,SUM(ISNULL(QUANTITY_OUT,0)) AS OUT_VALUE,[QUARTER],SPARE_PART_CODE --, SUM(ISNULL(INVENTORY_VALUES_VN,0)) AS INVENTORY,[dbo].[GET_NAME_CHAR_QUARTER]([QUARTER]) AS TIME_VALUE
											FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
											WHERE SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM string_split(@A_SPARE_PART_CODE,'$')) AND DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
											GROUP BY SPARE_PART_CODE,[QUARTER]
											) SUB 
											 FULL JOIN @INVENTORY_QUARTER_Q IM ON SUB.[QUARTER] = IM.[QUARTER] AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
											ORDER BY SUB.SPARE_PART_CODE,ISNULL(SUB.[QUARTER],IM.[QUARTER])

											IF @A_DEPARTMENT = 'SMT'
											 BEGIN
													SELECT SUM([PRODUCT_POINT])/@K_POINT AS PRODUCT,[dbo].[GET_NAME_CHAR_QUARTER](DATEPART(QUARTER, [DATE])) AS TIME_VALUE
													FROM [dbo].[EWIP_DAILY_ACTUAL_PROCD_SMT]
													WHERE DATEPART(QUARTER, [DATE]) BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY DATEPART(QUARTER, [DATE])
													ORDER BY DATEPART(QUARTER, [DATE]) ASC

													DECLARE @LOCAL_DATA_QUARTER1 TABLE
													(
														PLANT FLOAT,
														QUARTERS INT
													)

													DECLARE @A_START_QUARTER1 DATE
													DECLARE @A_END_QUARTER1 DATE

													IF CAST(@A_FROM AS INT) = 1
													   BEGIN
															SET @A_START_QUARTER1 = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-01-01') AS DATE);
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER1))
													   END
													ELSE IF  CAST(@A_FROM AS INT) = 2
													   BEGIN
															SET @A_START_QUARTER1 = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-04-01') AS DATE);
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER1))
													   END
													ELSE IF  CAST(@A_FROM AS INT) = 3
													   BEGIN
															SET @A_START_QUARTER1 = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-07-01') AS DATE);
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER1))
													   END
													 ELSE IF  CAST(@A_FROM AS INT) = 4
													   BEGIN
															SET @A_START_QUARTER1 = CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-10-01') AS DATE);
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,@A_START_QUARTER1))
													   END

													   IF CAST(@A_TO AS INT) = 1
													   BEGIN
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-01-01') AS DATE)))
													   END
													ELSE IF  CAST(@A_TO AS INT) = 2
													   BEGIN
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-04-01') AS DATE)))
													   END
													ELSE IF  CAST(@A_TO AS INT) = 3
													   BEGIN
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-07-01') AS DATE)))
													   END
													 ELSE IF  CAST(@A_TO AS INT) = 4
													   BEGIN
															SET @A_END_QUARTER1 = EOMONTH(DATEADD(MONTH,2,CAST((CAST(YEAR(GETDATE()) AS NVARCHAR) + '-10-01') AS DATE)))
													   END

													;WITH cte AS
													(
														SELECT SUM(WHC_PLAN_POINT * 1000) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
														FROM [dbo].[EWIP_GOC_PLAN_SMT]
														WHERE CAST((CAST([YEAR_PLAN] AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE) BETWEEN @A_START_QUARTER1 AND @A_END_QUARTER1 AND [YEAR_PLAN] = YEAR(GETDATE())
														GROUP BY FORMAT (CAST((CAST([YEAR_PLAN] AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK]
													 )
													 INSERT INTO  @LOCAL_DATA_QUARTER1
													 SELECT PLANT,[dbo].[GET_QUARTER_BY_MONTH]([MONTH])
													 FROM cte 
													 WHERE RowNum = 1 
													 ORDER BY [MONTH] ASC

													 SELECT SUM(PLANT)/@K_POINT AS PLANT,[dbo].[GET_NAME_CHAR_QUARTER](QUARTERS) AS TIME_VALUE
													 FROM @LOCAL_DATA_QUARTER1
													 WHERE QUARTERS BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) 
													 GROUP BY QUARTERS
													 ORDER BY QUARTERS
											 END
											ELSE
											   BEGIN
															SELECT  '' AS PRODUCT,
																	'' AS TIME_VALUE
															WHERE @@ROWCOUNT < 0

															SELECT  '' AS PLANT,
																	'' AS TIME_VALUE
															WHERE @@ROWCOUNT < 0
											   END
									END
			END
					
					  EXEC [dbo].[PKG_BUSINESS_CHART_CLASSIFY@GET_DATA]
					       @A_DEPT_CODE      = @A_DEPARTMENT,
						   @A_MONTH          = @A_MONTH_COMPARE,
						   @A_SPARE_PART_CODE  = @A_SPARE_PART_CODE,
						   @A_KRW_VND       =  @VND_KRW,
						   @N_RETURN		=	@N_RETURN	OUTPUT,
						   @V_RETURN		=	@V_RETURN	OUTPUT

						    IF @N_RETURN <> 0 
								THROW @N_RETURN, @V_RETURN, 1;
			END
		ELSE IF @A_CATEGORY = '0' -- CONG DOAN
		      BEGIN
						SET @VND_KRW = @VND_KRW*0.00001

						IF @A_TYPE_VALUE = 'M' BEGIN  -- MONEY
            					IF @A_TYPE_VIEW = 'MONTH' BEGIN   
										DECLARE @START_MONTH2 DATE 

										SET @START_MONTH2 = DATEADD(month, DATEDIFF(month, 0, @A_FROM), 0)

										SELECT SUM(IN_VALUES_VN*@VND_KRW) AS IN_VALUE,SUM(OUT_VALUES_VN*@VND_KRW) AS OUT_VALUE,SUM(INVENTORY_VALUES_VN*@VND_KRW) AS INVENTORY,O.[OPERATION_NAME] AS STAGE
										FROM [dbo].[EWIP_INVENTORY_VALUES_BY_TIME] VT
										INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON VT.SPARE_PART_CODE = SP.CODE AND VT.DEPT_CODE = SP.SP_DEPT_CODE
										LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
										WHERE [MONTH] = MONTH(@START_MONTH2) AND [YEAR] = YEAR(@START_MONTH2) AND VT.DEPT_CODE = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''
										GROUP BY SP.DESCRIPTION,O.[OPERATION_NAME] -- CONG DOAN
										ORDER BY SUM(INVENTORY_VALUES_VN*@VND_KRW) DESC

										DECLARE @IN_TOTAL FLOAT = 0;
										DECLARE  @OUT_TOTAL FLOAT = 0;
										DECLARE @INVENTORY_TOTAL FLOAT = 0;

										SELECT @IN_TOTAL = SUM(IN_VALUES_VN*@VND_KRW),@OUT_TOTAL = SUM(OUT_VALUES_VN*@VND_KRW) ,@INVENTORY_TOTAL = SUM(INVENTORY_VALUES_VN*@VND_KRW)
										FROM [dbo].[EWIP_INVENTORY_VALUES_BY_TIME] VT
										INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON VT.SPARE_PART_CODE = SP.CODE AND VT.DEPT_CODE = SP.SP_DEPT_CODE
										LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
										WHERE [MONTH] = MONTH(@START_MONTH2) AND [YEAR] = YEAR(@START_MONTH2) AND VT.DEPT_CODE = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''

										SELECT @IN_TOTAL AS TOTAL_VALUE, 'IN' AS TOTAL_NAME
										UNION ALL SELECT @OUT_TOTAL AS TOTAL_VALUE, 'OUT' AS TOTAL_NAME
										UNION ALL SELECT @INVENTORY_TOTAL AS TOTAL_VALUE, 'INVENTORY' AS TOTAL_NAME
							    END
								ELSE IF @A_TYPE_VIEW = 'DAY'
								        BEGIN
												SELECT SUM(IN_VALUES_VN*@VND_KRW) AS IN_VALUE,SUM(OUT_VALUES_VN*@VND_KRW) AS OUT_VALUE,SUM(INVENTORY_VALUES_VN*@VND_KRW) AS INVENTORY,O.[OPERATION_NAME] AS STAGE
												FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] QT
												INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON QT.SPARE_PART_CODE = SP.CODE AND QT.DEPT_CODE = SP.SP_DEPT_CODE
												LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
												WHERE [DATE] = CAST(@A_FROM AS DATE) AND QT.DEPT_CODE = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''
												GROUP BY SP.DESCRIPTION,O.[OPERATION_NAME]-- CONG DOAN
												ORDER BY SUM(INVENTORY_VALUES_VN*@VND_KRW) DESC

												SELECT @IN_TOTAL = SUM(IN_VALUES_VN*@VND_KRW),@OUT_TOTAL = SUM(OUT_VALUES_VN*@VND_KRW),@INVENTORY_TOTAL = SUM(INVENTORY_VALUES_VN*@VND_KRW)
												FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] QT
												INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON QT.SPARE_PART_CODE = SP.CODE AND QT.DEPT_CODE = SP.SP_DEPT_CODE
												LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
												WHERE [DATE] = CAST(@A_FROM AS DATE) AND QT.DEPT_CODE = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''

												SELECT @IN_TOTAL AS TOTAL_VALUE, 'IN' AS TOTAL_NAME
												UNION ALL SELECT @OUT_TOTAL AS TOTAL_VALUE, 'OUT' AS TOTAL_NAME
												UNION ALL SELECT @INVENTORY_TOTAL AS TOTAL_VALUE, 'INVENTORY' AS TOTAL_NAME
										END
								ELSE IF @A_TYPE_VIEW = 'WEEK'
								       BEGIN
												DECLARE @WEEK_START2 int
												DECLARE @INVENTORY_WEEK_M1 TABLE(WEEK INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

												SET @WEEK_START2 = CAST(@A_FROM AS int)

												;WITH cts AS(
											    SELECT [WEEK],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[WEEK] ORDER BY DATE DESC) AS rn
												FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
												WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] = @WEEK_START2 AND YEAR([DATE]) = YEAR(GETDATE())
												)
											    INSERT INTO @INVENTORY_WEEK_M1
												SELECT [WEEK],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

											   SELECT SUM(SUB.IN_VALUE*@VND_KRW) AS IN_VALUE,SUM(SUB.OUT_VALUE*@VND_KRW) AS OUT_VALUE,SUM(IM.INVENTORY*@VND_KRW) AS INVENTORY,O.[OPERATION_NAME] AS STAGE
											   FROM
											    (SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[WEEK],QT.SPARE_PART_CODE
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] QT
													WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] = @WEEK_START2 AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY [WEEK],QT.SPARE_PART_CODE
												) SUB 
												 FULL JOIN @INVENTORY_WEEK_M1 IM ON SUB.WEEK = IM.WEEK AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
												 INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON IM.SPARE_PART_CODE = SP.CODE AND SP.SP_DEPT_CODE = @A_DEPARTMENT
												 LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
												 where O.[DEPT_CODE] = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''
												 GROUP BY SP.DESCRIPTION,O.[OPERATION_NAME]
												 ORDER BY SUM(IM.INVENTORY*@VND_KRW) DESC

												SELECT @IN_TOTAL = SUM(SUB.IN_VALUE*@VND_KRW),@OUT_TOTAL = SUM(SUB.OUT_VALUE*@VND_KRW),@INVENTORY_TOTAL = SUM(IM.INVENTORY*@VND_KRW)
											    FROM
											    (SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[WEEK],QT.SPARE_PART_CODE
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] QT
													WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] = @WEEK_START2 AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY [WEEK],QT.SPARE_PART_CODE
												) SUB 
												 FULL JOIN @INVENTORY_WEEK_M1 IM ON SUB.WEEK = IM.WEEK AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
												 INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON IM.SPARE_PART_CODE = SP.CODE AND SP.SP_DEPT_CODE = @A_DEPARTMENT
												 LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
												 where O.[DEPT_CODE] = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''
												
												SELECT @IN_TOTAL AS TOTAL_VALUE, 'IN' AS TOTAL_NAME
												UNION ALL SELECT @OUT_TOTAL AS TOTAL_VALUE, 'OUT' AS TOTAL_NAME
												UNION ALL SELECT @INVENTORY_TOTAL AS TOTAL_VALUE, 'INVENTORY' AS TOTAL_NAME
									   END
								  ELSE IF  @A_TYPE_VIEW = 'QUARTER'
								       BEGIN
									          DECLARE @INVENTORY_QUARTER_M1 TABLE(QUARTER INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

											  ;WITH cts AS(
														    SELECT [QUARTER],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[QUARTER] ORDER BY DATE DESC) AS rn
															FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
															WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] = CAST(@A_FROM AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
														  )
														 INSERT INTO @INVENTORY_QUARTER_M1
														 SELECT [QUARTER],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

												SELECT SUM(SUB.IN_VALUE*@VND_KRW) AS IN_VALUE,SUM(SUB.OUT_VALUE*@VND_KRW) AS OUT_VALUE,SUM(IM.INVENTORY*@VND_KRW) AS INVENTORY,O.[OPERATION_NAME] AS STAGE
												FROM
												(
													SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[QUARTER],SPARE_PART_CODE
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] = CAST(@A_FROM AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY SPARE_PART_CODE,[QUARTER]
												) SUB 
												 FULL JOIN @INVENTORY_QUARTER_M1 IM ON SUB.[QUARTER] = IM.[QUARTER] AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
												 INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON IM.SPARE_PART_CODE = SP.CODE AND SP.SP_DEPT_CODE = @A_DEPARTMENT
												 LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
												 where O.[DEPT_CODE] = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''
												GROUP BY SP.DESCRIPTION,O.[OPERATION_NAME]
												ORDER BY SUM(IM.INVENTORY*@VND_KRW) DESC

												SELECT @IN_TOTAL = SUM(SUB.IN_VALUE*@VND_KRW),@OUT_TOTAL = SUM(SUB.OUT_VALUE*@VND_KRW),@INVENTORY_TOTAL = SUM(IM.INVENTORY*@VND_KRW)
												FROM
												(
													SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[QUARTER],SPARE_PART_CODE
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] = CAST(@A_FROM AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
													GROUP BY SPARE_PART_CODE,[QUARTER]
												) SUB 
												 FULL JOIN @INVENTORY_QUARTER_M1 IM ON SUB.[QUARTER] = IM.[QUARTER] AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
												 INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON IM.SPARE_PART_CODE = SP.CODE AND SP.SP_DEPT_CODE = @A_DEPARTMENT
												 LEFT JOIN [dbo].[EWIP_OPERATION] O ON O.[OPERATION_ID] = SP.DESCRIPTION AND O.[DEPT_CODE] = SP.SP_DEPT_CODE
												 where O.[DEPT_CODE] = @A_DEPARTMENT AND O.[OPERATION_NAME] IS NOT NULL AND O.[OPERATION_NAME] != ''

												SELECT @IN_TOTAL AS TOTAL_VALUE, 'IN' AS TOTAL_NAME
												UNION ALL SELECT @OUT_TOTAL AS TOTAL_VALUE, 'OUT' AS TOTAL_NAME
												UNION ALL SELECT @INVENTORY_TOTAL AS TOTAL_VALUE, 'INVENTORY' AS TOTAL_NAME
									   END
						END
			  END
		ELSE  IF @A_CATEGORY = '3' OR @A_CATEGORY = '2' -- HANG COMSUMABLE 
		           BEGIN
						SET @VND_KRW = @VND_KRW*0.001

						DECLARE @TYPE_CATEGORY CHAR(5)
						IF @A_CATEGORY = '3' 
						    SET @TYPE_CATEGORY = '1'
						ELSE 
						    SET @TYPE_CATEGORY = '2'

						IF @A_TYPE_VALUE = 'M' BEGIN  -- MONEY
            					IF @A_TYPE_VIEW = 'MONTH' BEGIN   
										
											DECLARE @START_MONTH3 DATE 
											DECLARE @END_MONTH3 DATE

											SET @START_MONTH3 = DATEADD(month, DATEDIFF(month, 0, @A_FROM), 0)
											SET @END_MONTH3 = EOMONTH(@A_TO)

											SELECT SUM(IN_VALUES_VN*@VND_KRW) AS IN_VALUE,SUM(OUT_VALUES_VN*@VND_KRW) AS OUT_VALUE,SUM(INVENTORY_VALUES_VN*@VND_KRW) AS INVENTORY,[dbo].[CONVERT_MONTH_STR]([MONTH]) AS TIME_VALUE,'Consumable part' AS STAGE
											FROM [dbo].[EWIP_INVENTORY_VALUES_BY_TIME] T
											INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON SP.CODE = T.SPARE_PART_CODE AND SP.SP_DEPT_CODE = T.DEPT_CODE
											WHERE [DATE] BETWEEN @START_MONTH3 AND @END_MONTH3 AND DEPT_CODE = @A_DEPARTMENT AND SP.TYPE = @TYPE_CATEGORY
											GROUP BY [MONTH]
											ORDER BY [MONTH] ASC
									END
								ELSE IF @A_TYPE_VIEW = 'DAY'
								        BEGIN
												 SELECT SUM(IN_VALUES_VN*@VND_KRW) AS IN_VALUE,SUM(OUT_VALUES_VN*@VND_KRW) AS OUT_VALUE,SUM(INVENTORY_VALUES_VN*@VND_KRW) AS INVENTORY,FORMAT([DATE],'dd/MM') AS TIME_VALUE,'Consumable part' AS STAGE
												 FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] T
												 INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON SP.CODE = T.SPARE_PART_CODE AND SP.SP_DEPT_CODE = T.DEPT_CODE
												 WHERE [DATE] BETWEEN CAST(@A_FROM AS DATE) AND CAST(@A_TO AS DATE) AND DEPT_CODE = @A_DEPARTMENT AND SP.TYPE = @TYPE_CATEGORY
												 GROUP BY [DATE]
												 ORDER BY [DATE] ASC
										END
								ELSE IF @A_TYPE_VIEW = 'WEEK'
								       BEGIN
												DECLARE @WEEK_START4 int
												DECLARE @WEEK_END4 INT
												DECLARE @INVENTORY_WEEK_M4 TABLE(WEEK INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

												SET @WEEK_START4 = CAST(@A_FROM AS int)
												SET @WEEK_END4 = CAST(@A_TO AS int)

												;WITH cts AS
												(
													SELECT [WEEK],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[WEEK] ORDER BY DATE DESC) AS rn
													FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
													WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START4 AND @WEEK_END4 AND YEAR([DATE]) = YEAR(GETDATE())
												)
												INSERT INTO @INVENTORY_WEEK_M4
												SELECT [WEEK],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

												 SELECT SUM(SUB.IN_VALUE*@VND_KRW) AS IN_VALUE,SUM(SUB.OUT_VALUE*@VND_KRW) AS OUT_VALUE,SUM(IM.INVENTORY*@VND_KRW) AS INVENTORY,CAST(ISNULL(SUB.WEEK,IM.WEEK) AS NVARCHAR) AS TIME_VALUE,'Consumable part' AS STAGE
												  FROM
												   (	SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[WEEK],SPARE_PART_CODE
														FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
														WHERE DEPT_CODE = @A_DEPARTMENT AND [WEEK] BETWEEN @WEEK_START4 AND @WEEK_END4 AND YEAR([DATE]) = YEAR(GETDATE())
														GROUP BY SPARE_PART_CODE,[WEEK]
												   ) SUB 
												 FULL JOIN @INVENTORY_WEEK_M4 IM ON SUB.WEEK = IM.WEEK AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
												 INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON SP.CODE = IM.SPARE_PART_CODE AND SP.SP_DEPT_CODE = @A_DEPARTMENT
												 WHERE SP.TYPE = @TYPE_CATEGORY
												 GROUP BY ISNULL(SUB.WEEK,IM.WEEK)
												 ORDER BY ISNULL(SUB.WEEK,IM.WEEK) ASC
												   
									   END
								  ELSE IF  @A_TYPE_VIEW = 'QUARTER'
								       BEGIN
									         			DECLARE @INVENTORY_QUARTER_M2 TABLE(QUARTER INT,INVENTORY FLOAT,SPARE_PART_CODE NVARCHAR(50))

														;WITH cts AS(
															 SELECT [QUARTER],ISNULL(INVENTORY_VALUES_VN,0) AS INVENTORY,SPARE_PART_CODE,ROW_NUMBER() OVER (PARTITION BY SPARE_PART_CODE,[QUARTER] ORDER BY DATE DESC) AS rn
																FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
																WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
																)
															 INSERT INTO @INVENTORY_QUARTER_M2
															 SELECT [QUARTER],INVENTORY,SPARE_PART_CODE FROM cts WHERE rn = 1

														SELECT SUM(SUB.IN_VALUE*@VND_KRW) AS IN_VALUE,SUM(SUB.OUT_VALUE*@VND_KRW) AS OUT_VALUE,SUM(IM.INVENTORY*@VND_KRW) AS INVENTORY,[dbo].[GET_NAME_CHAR_QUARTER](ISNULL(SUB.[QUARTER],IM.[QUARTER])) AS TIME_VALUE,'Consumable part' AS STAGE
														FROM
														(
															SELECT SUM(ISNULL(IN_VALUES_VN,0)) AS IN_VALUE,SUM(ISNULL(OUT_VALUES_VN,0)) AS OUT_VALUE,[QUARTER],SPARE_PART_CODE
															FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
															WHERE DEPT_CODE = @A_DEPARTMENT AND [QUARTER] BETWEEN CAST(@A_FROM AS INT) AND CAST(@A_TO AS INT) AND YEAR([DATE]) = YEAR(GETDATE())
															GROUP BY SPARE_PART_CODE,[QUARTER]
														) SUB 
														FULL JOIN @INVENTORY_QUARTER_M2 IM ON SUB.[QUARTER] = IM.[QUARTER] AND SUB.SPARE_PART_CODE = IM.SPARE_PART_CODE
														INNER JOIN [dbo].[EWIP_SPARE_PART] SP ON SP.CODE = IM.SPARE_PART_CODE AND SP.SP_DEPT_CODE = @A_DEPARTMENT
														WHERE SP.TYPE = @TYPE_CATEGORY
														GROUP BY ISNULL(SUB.[QUARTER],IM.[QUARTER])
														ORDER BY ISNULL(SUB.[QUARTER],IM.[QUARTER]) ASC
									   END
						END
				   END
       END
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH
GO
