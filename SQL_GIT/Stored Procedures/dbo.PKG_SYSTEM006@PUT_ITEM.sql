SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROCEDURE [dbo].[PKG_SYSTEM006@PUT_ITEM](
@A_PLANT			VARCHAR(50),
@A_USERROLE			VARCHAR(20),
@A_USERROLE_NAME	NVARCHAR(100),
@A_USEFLAG			VARCHAR(1),
@A_REMARKS			NVARCHAR(4000),
@A_TRAN_USER_ID		VARCHAR(30),
@A_DEPARTMENT		VARCHAR(50),
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

DECLARE	@V_TRAN_TIME	VARCHAR(14);
DECLARE	@V_CHECK		INT;

BEGIN TRY

	SET @V_TRAN_TIME = dbo.FUN_CURR_TIME();
	SET @V_CHECK = 0;

	SELECT @V_CHECK = COUNT(*)
    FROM ESYSMSTROL T1
    WHERE T1.PLANT = @A_PLANT
    AND T1.USERROLE = @A_USERROLE
	AND T1.DEPARTMENT = @A_DEPARTMENT;
	
	BEGIN TRAN

		IF @V_CHECK != 0 
			BEGIN
				UPDATE ESYSMSTROL
				SET USERROLE_NAME = @A_USERROLE_NAME,
					USEFLAG = @A_USEFLAG,
					REMARKS = @A_REMARKS,
					UPDATE_TIME = @V_TRAN_TIME,
					UPDATE_USER = @A_TRAN_USER_ID
				WHERE PLANT = @A_PLANT
				AND USERROLE = @A_USERROLE
				AND DEPARTMENT = @A_DEPARTMENT;
			END
		ELSE
			BEGIN
				INSERT INTO ESYSMSTROL (
					PLANT,
					DEPARTMENT,
					USERROLE,
					USERROLE_NAME,
					USEFLAG,
					REMARKS,
					CREATE_TIME,
					CREATE_USER
				) VALUES (
					@A_PLANT,
					@A_DEPARTMENT,
					@A_USERROLE,
					@A_USERROLE_NAME,
					@A_USEFLAG,
					@A_REMARKS,
					@V_TRAN_TIME,
					@A_TRAN_USER_ID
				);
			END

	COMMIT TRAN

	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_001';
END TRY
BEGIN CATCH

	rollback tran;
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH








GO
