SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_GOODS_RECEIPT_ISSUE@HISTORY_BY_CODE](
@A_DEPT_CODE NVARCHAR(50),
@A_STOCK_CODE NVARCHAR(50),
@A_SPARE_PART NVARCHAR(50),
@A_TIME_FROM NVARCHAR(50),
@A_TIME_TO NVARCHAR(50),
@N_RETURN	int				OUTPUT,
@V_RETURN	NVARCHAR(MAX)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  
		 DECLARE @SQLStament nvarchar(max)

		
       
	    IF @A_DEPT_CODE != 'CSP'
		    BEGIN
					 SET @SQLStament = N'
						SELECT HI.[SPARE_PART_CODE],SP.[NAME_VI],SP.[NAME_KR],HI.[QUANTITY],HI.[UNIT], OU.LOCATION ,HI.[DEPT_CODE],HI.[STOCK_CODE],HI.[DATE],[TIME_INPUT],ORDER_CODE as PO_NO,cast(HI.[MONTH] as nvarchar) as THANG,cast(HI.[YEAR] as nvarchar) AS NAM,HI.[IN_OUT],HI.[STATUS] 
						FROM [dbo].[EWIP_HISTORY_INVENTORY] HI
						INNER JOIN EWIP_SPARE_PART SP ON HI.SPARE_PART_CODE = SP.CODE AND HI.[DEPT_CODE] = SP.[SP_DEPT_CODE]
						LEFT JOIN [dbo].[EWIP_INVENTORY_DELIVERY_RECEIVING] ON CODE_NO = HI.[STOCK_IN_OUT_CODE]
						LEFT JOIN [dbo].[EWIP_STOCK_OUT] OU ON HI.STOCK_IN_OUT_CODE = OU.STOCK_OUT_CODE AND HI.DEPT_CODE = OU.DEPT_CODE AND HI.SPARE_PART_CODE = OU.SPARE_PART_CODE
						LEFT JOIN [dbo].[EWIP_SP_STOCKIN] KIN ON  HI.STOCK_IN_OUT_CODE = KIN.STOCK_IN_CODE AND HI.SPARE_PART_CODE = KIN.SPARE_PART_CODE AND HI.DEPT_CODE = KIN.DEPT_CODE
						WHERE HI.DEPT_CODE = ''' + @A_DEPT_CODE + ''' AND HI.STOCK_CODE = ''' + @A_STOCK_CODE+''''
			END
		ELSE 
		   BEGIN
				 SET @SQLStament = N'
					SELECT HI.[SPARE_PART_CODE],SP.[NAME_VI],SP.[NAME_KR],HI.[QUANTITY],HI.[QUANTITY]*(ISNULL(SUB3.PRICE_VN,SUB.PRICE_VN))/[dbo].[CONVERT_UNIT](''PACK'',HI.[UNIT],HI.SPARE_PART_CODE,''CSP'') AS VALUE_VN ,HI.[QUANTITY]*(ISNULL(SUB3.PRICE_US,SUB.PRICE_US))/[dbo].[CONVERT_UNIT](''PACK'',HI.[UNIT],HI.SPARE_PART_CODE,''CSP'') AS VALUE_US,HI.[UNIT], OU.LOCATION ,HI.[DEPT_CODE],HI.[STOCK_CODE],HI.[DATE],[TIME_INPUT],ORDER_CODE as PO_NO,cast(HI.[MONTH] as nvarchar) as THANG,cast(HI.[YEAR] as nvarchar) AS NAM,HI.[IN_OUT],HI.[STATUS] 
					FROM [dbo].[EWIP_HISTORY_INVENTORY] HI
					INNER JOIN EWIP_SPARE_PART SP ON HI.SPARE_PART_CODE = SP.CODE AND HI.[DEPT_CODE] = SP.[SP_DEPT_CODE]
					LEFT JOIN [dbo].[EWIP_INVENTORY_DELIVERY_RECEIVING] ON CODE_NO = HI.[STOCK_IN_OUT_CODE]
					LEFT JOIN [dbo].[EWIP_STOCK_OUT] OU ON HI.STOCK_IN_OUT_CODE = OU.STOCK_OUT_CODE AND HI.DEPT_CODE = OU.DEPT_CODE AND HI.SPARE_PART_CODE = OU.SPARE_PART_CODE
					LEFT JOIN [dbo].[EWIP_SP_STOCKIN] KIN ON  HI.STOCK_IN_OUT_CODE = KIN.STOCK_IN_CODE AND HI.SPARE_PART_CODE = KIN.SPARE_PART_CODE AND HI.DEPT_CODE = KIN.DEPT_CODE
					LEFT JOIN (SELECT
								SPARE_PART_CODE,
								[PRICE_VN]/[dbo].[CONVERT_UNIT](UNIT,''PACK'',[SPARE_PART_CODE],''CSP'') AS PRICE_VN,
								[PRICE_US]/[dbo].[CONVERT_UNIT](UNIT,''PACK'',[SPARE_PART_CODE],''CSP'')  AS PRICE_US,
								[MONTH],[YEAR]
						 FROM [dbo].[EWIP_INVENTORY_BY_TIME]
						 WHERE DEPT_CODE = ''CSP''  AND STOCK_CODE = ''CSP_K1'' 
					   ) AS SUB3 ON SUB3.SPARE_PART_CODE = HI.SPARE_PART_CODE AND SUB3.[MONTH] =  HI.[MONTH] AND SUB3.[YEAR] = HI.[YEAR]
				  LEFT JOIN (SELECT TOP 1 WITH TIES 
						[SPARE_PART_CODE],
						[PRICE_VN]/[dbo].[CONVERT_UNIT]([UNIT_CODE],''PACK'',[SPARE_PART_CODE],''CSP'') AS [PRICE_VN],
						[PRICE_US]/[dbo].[CONVERT_UNIT]([UNIT_CODE],''PACK'',[SPARE_PART_CODE],''CSP'') AS [PRICE_US], 
						''PACK'' AS UNIT
						FROM [dbo].[EWIP_SPAREPART_PRICE] 
						WHERE [DEPT_CODE] = ''CSP''
						ORDER BY ROW_NUMBER() OVER(PARTITION BY SPARE_PART_CODE ORDER BY [DATE] DESC)) SUB ON SUB.SPARE_PART_CODE = HI.SPARE_PART_CODE
				  WHERE HI.DEPT_CODE = ''CSP'' AND HI.STOCK_CODE = ''CSP_K1''' 
		   END

		IF @A_SPARE_PART <> '' 
		   BEGIN
				 SET @SQLStament += N' AND HI.SPARE_PART_CODE = ''' + @A_SPARE_PART + '''';
		   END

		IF @A_TIME_FROM <> '' 
		     SET @SQLStament += N' AND HI.[DATE] >= CAST(''' + @A_TIME_FROM + ''' AS date)'

		IF  @A_TIME_TO <> '' 
		     SET @SQLStament += N' AND HI.[DATE] <= CAST('''+@A_TIME_TO+''' AS date)'

			 SET @SQLStament += N' ORDER BY HI.[DATE] DESC,[TIME_INPUT] DESC'

		PRINT @SQLStament
		EXEC (@SQLStament)
	 END
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';

END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH

GO
