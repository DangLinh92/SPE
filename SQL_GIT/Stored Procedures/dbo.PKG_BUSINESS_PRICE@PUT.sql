SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_PRICE@PUT](
@A_DEPT_CODE  NVARCHAR(50),
@A_SPARE_PART_CODE NVARCHAR(50),
@A_IS_EDIT       NVARCHAR(50),
@A_PRICE_VN      NVARCHAR(50),
@A_PRICE_US      NVARCHAR(50),
@A_DATE          NVARCHAR(50),
@A_UNIT         NVARCHAR(50),
@A_ID           NVARCHAR(50),
@A_INPUT_DEFAULT  NVARCHAR(50),
@N_RETURN		 int   OUTPUT,
@V_RETURN		 NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  
			DECLARE @CHECK INT = 0

			IF @A_SPARE_PART_CODE = 'FLUX TSF-8818HF' AND @A_ID = '' AND @A_IS_EDIT = 'True' and @A_DEPT_CODE = 'SMT'
			   BEGIN
					 SELECT TOP 1 @A_ID = ID FROM  [dbo].[EWIP_SPAREPART_PRICE] WHERE SPARE_PART_CODE = 'FLUX TSF-8818HF' AND DEPT_CODE = 'SMT' ORDER BY [DATE] DESC

					 IF @A_ID IS NULL OR @A_ID = ''
					     BEGIN
								SET @A_IS_EDIT = 'False'
						 END

					DECLARE @RATE FLOAT = 0;

					SELECT TOP 1 @RATE = RATE 
					FROM [dbo].[EWIP_EXCHANGE_RATE] 
					WHERE [FROM] = 'USD' AND [TO] = 'VND' 
					ORDER BY VALID_TIME DESC

					SET @A_DATE = GETDATE();

					IF @RATE > 0
					    SET @A_PRICE_US = CAST(CAST(@A_PRICE_VN AS FLOAT)/@RATE AS NVARCHAR);
			   END
			
			IF @A_IS_EDIT = 'False'
			  BEGIN
			        IF NOT EXISTS(SELECT * FROM [EWIP_SPAREPART_PRICE] WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPT_CODE AND MONTH(DATE) = MONTH(CAST(@A_DATE AS date)) AND YEAR(DATE) = YEAR(CAST(@A_DATE AS date)))
					   INSERT INTO [dbo].[EWIP_SPAREPART_PRICE]
					   VALUES(@A_SPARE_PART_CODE,NULL,CAST(@A_PRICE_VN AS float),CAST(@A_PRICE_US AS float),@A_UNIT,@A_DEPT_CODE,CAST(@A_DATE AS date),@A_INPUT_DEFAULT)
					ELSE
					   UPDATE [dbo].[EWIP_SPAREPART_PRICE]
					   SET [PRICE_VN] = @A_PRICE_VN,PRICE_US = @A_PRICE_US ,UNIT_CODE = @A_UNIT,[DATE] = CAST(@A_DATE AS date),SPARE_PART_CODE = @A_SPARE_PART_CODE,[INPUT_DEFAULT] = @A_INPUT_DEFAULT
					   WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPT_CODE AND MONTH(DATE) = MONTH(CAST(@A_DATE AS date)) AND YEAR(DATE) = YEAR(CAST(@A_DATE AS date)) 
			   END
			ELSE
			    BEGIN
				     DECLARE @OLD_PRICE_VN FLOAT = 0
					 DECLARE @OLD_PRICE_US FLOAT = 0
					 DECLARE @OLD_UNIT NVARCHAR(20)

					 SELECT @OLD_PRICE_VN = [PRICE_VN]/([dbo].[CONVERT_UNIT](UNIT_CODE,@A_UNIT,SPARE_PART_CODE,@A_DEPT_CODE)),@OLD_PRICE_US = PRICE_US/([dbo].[CONVERT_UNIT](UNIT_CODE,@A_UNIT,SPARE_PART_CODE,@A_DEPT_CODE)),@OLD_UNIT =UNIT_CODE 
					 FROM [EWIP_SPAREPART_PRICE] WHERE ID = @A_ID

					 UPDATE [dbo].[EWIP_SPAREPART_PRICE]
					 SET [PRICE_VN] = @A_PRICE_VN,PRICE_US = @A_PRICE_US ,UNIT_CODE = @A_UNIT,[DATE] = CAST(@A_DATE AS date),SPARE_PART_CODE = @A_SPARE_PART_CODE,[INPUT_DEFAULT] = @A_INPUT_DEFAULT
					 WHERE ID = @A_ID

					 IF @OLD_PRICE_VN > 0 AND @OLD_PRICE_US > 0
					   BEGIN
							UPDATE [dbo].[EWIP_INVENTORY_VALUES_BY_TIME]
							SET IN_VALUES_VN = (IN_VALUES_VN/@OLD_PRICE_VN)*@A_PRICE_VN,OUT_VALUES_VN = (OUT_VALUES_VN/@OLD_PRICE_VN)*@A_PRICE_VN,INVENTORY_VALUES_VN = (INVENTORY_VALUES_VN/@OLD_PRICE_VN)*@A_PRICE_VN,
							    IN_VALUES_US = (IN_VALUES_US/@OLD_PRICE_US)*@A_PRICE_US, OUT_VALUES_US = (OUT_VALUES_US/@OLD_PRICE_US)*@A_PRICE_US,INVENTORY_VALUES_US = (INVENTORY_VALUES_US/@OLD_PRICE_US)*@A_PRICE_US
							WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPT_CODE AND CAST(@A_DATE AS date) >= DATE --MONTH = MONTH(CAST(@A_DATE AS date)) AND YEAR = YEAR(CAST(@A_DATE AS date))

							UPDATE EWIP_INVENTORY_QTY_VALUE_BY_DAY
							SET [IN_VALUES_VN] = QUANTITY_IN * @A_PRICE_VN/([dbo].[CONVERT_UNIT](@A_UNIT,UNIT,SPARE_PART_CODE,@A_DEPT_CODE)) , 
							   [OUT_VALUES_VN] = QUANTITY_OUT * @A_PRICE_VN/([dbo].[CONVERT_UNIT](@A_UNIT,UNIT,SPARE_PART_CODE,@A_DEPT_CODE)) ,
							   [INVENTORY_VALUES_VN] = QUANTITY_INVENTORY * @A_PRICE_VN/([dbo].[CONVERT_UNIT](@A_UNIT,UNIT,SPARE_PART_CODE,@A_DEPT_CODE)),
							    [IN_VALUES_US] = QUANTITY_IN * @A_PRICE_US/([dbo].[CONVERT_UNIT](@A_UNIT,UNIT,SPARE_PART_CODE,@A_DEPT_CODE)) ,
								[OUT_VALUES_US] = QUANTITY_OUT * @A_PRICE_US/([dbo].[CONVERT_UNIT](@A_UNIT,UNIT,SPARE_PART_CODE,@A_DEPT_CODE)) ,
								[INVENTORY_VALUES_US] = QUANTITY_INVENTORY * @A_PRICE_US/([dbo].[CONVERT_UNIT](@A_UNIT,UNIT,SPARE_PART_CODE,@A_DEPT_CODE))
							WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPT_CODE AND CAST(@A_DATE AS date) >= DATE--MONTH(DATE) = MONTH(CAST(@A_DATE AS date)) AND YEAR(DATE) = YEAR(CAST(@A_DATE AS date))
					  END
				END
			
			DECLARE @CHECK1 INT = 0

			SELECT @CHECK1 = COUNT(*) 
			FROM [dbo].[EWIP_INVENTORY_BY_TIME]
			WHERE [SPARE_PART_CODE] = @A_SPARE_PART_CODE AND [DEPT_CODE]=@A_DEPT_CODE AND [MONTH] = MONTH(CAST(@A_DATE AS date)) AND [YEAR] = YEAR(CAST(@A_DATE AS date))

			IF @CHECK1 > 0
			   UPDATE [dbo].[EWIP_INVENTORY_BY_TIME]
			   SET [PRICE_VN] = @A_PRICE_VN/[dbo].[CONVERT_UNIT](@A_UNIT,[UNIT],SPARE_PART_CODE,@A_DEPT_CODE),[PRICE_US] = @A_PRICE_US/[dbo].[CONVERT_UNIT](@A_UNIT,[UNIT],SPARE_PART_CODE,@A_DEPT_CODE)
			   WHERE [SPARE_PART_CODE] = @A_SPARE_PART_CODE AND [DEPT_CODE]=@A_DEPT_CODE AND [MONTH] = MONTH(CAST(@A_DATE AS date)) AND [YEAR] = YEAR(CAST(@A_DATE AS date))

			INSERT INTO [dbo].[EWIP_SPAREPART_PRICE_TRACKING]
			VALUES(@A_SPARE_PART_CODE,NULL,CAST(@A_PRICE_VN AS float),CAST(@A_PRICE_US AS float),@A_UNIT,@A_DEPT_CODE,CAST(@A_DATE AS date),@A_INPUT_DEFAULT)

       END
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
END CATCH
GO
