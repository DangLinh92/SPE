SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_BASE_LINE_QTY_VALUE_BY_DAY_SPARE_PART@CALL](
@A_DEPARTMENT		NVARCHAR(50),
@A_STOCK            VARCHAR(50),
@A_SPARE_PART_CODE  NVARCHAR(50),
@A_DATE				NVARCHAR(50), -- 2021-06-15
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  
			BEGIN TRAN;
			--- TINH XUAT NHAP TON THEO NGAY

		  -- CACULATOR VALUE MONEY
		  DECLARE @IN_VALUES_OF_DATE_VN FLOAT = 0
		  DECLARE @OUT_VALUES_OF_DATE_VN FLOAT = 0
		  DECLARE @IN_VALUES_OF_DATE_US FLOAT = 0
		  DECLARE @OUT_VALUES_OF_DATE_US FLOAT = 0
		  DECLARE @INVENTORY_VALUES_US FLOAT = 0
		  DECLARE @INVENTORY_VALUES_VN FLOAT = 0

		  DECLARE @QUANTITY_IN FLOAT = 0
		  DECLARE @QUANTITY_OUT FLOAT = 0
		  DECLARE @QUANTITY_INVENTORY FLOAT = 0
		  DECLARE @QUANTITY_INVENTORY_INCLUDE FLOAT = 0 -- SO LUONG HANG THEO MAY

		  DECLARE @PACK_UNIT NVARCHAR(50) = 'PACK'

		  -- TINH GIA TRI NHAP 
		 SELECT @IN_VALUES_OF_DATE_VN = SUM((ISNULL(dbo.CONVERT_UNIT(ehi.UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT)* ISNULL(Ehi.QUANTITY,0),0) - ISNULL(dbo.CONVERT_UNIT(ehi.UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(EHI.QUANTITY_NG,0),0) - CASE WHEN STIN.IS_INTEGRATED = 'True' THEN ISNULL(ISNULL(STIN.QUANTITY,0) * dbo.CONVERT_UNIT(STIN.UNIT_CODE,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) ,0) ELSE 0 END)* ISNULL(SUB2.PRICE_VN,ISNULL(SUB3.PRICE_VN,SUB.PRICE_VN))),
		        @IN_VALUES_OF_DATE_US = SUM((ISNULL(dbo.CONVERT_UNIT(ehi.UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(EHI.QUANTITY,0),0) - ISNULL(dbo.CONVERT_UNIT(ehi.UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT)* ISNULL(EHI.QUANTITY_NG,0),0) - CASE WHEN STIN.IS_INTEGRATED = 'True' THEN ISNULL(ISNULL(STIN.QUANTITY,0) * dbo.CONVERT_UNIT(STIN.UNIT_CODE,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) ,0) ELSE 0 END)* ISNULL(SUB2.PRICE_US,ISNULL(SUB3.PRICE_US,SUB.PRICE_US)))
		 FROM EWIP_HISTORY_INVENTORY ehi
		 INNER JOIN [dbo].[EWIP_INVENTORY_DELIVERY_RECEIVING] IDR ON ehi.STOCK_IN_OUT_CODE = IDR.CODE_NO AND IDR.STATUS = 'COMPLETE' AND ehi.DEPT_CODE = IDR.DEPT_CODE
		 INNER JOIN [dbo].[EWIP_SP_STOCKIN] STIN ON ehi.STOCK_IN_OUT_CODE = stin.STOCK_IN_CODE AND ehi.SPARE_PART_CODE = STIN.SPARE_PART_CODE AND ehi.DEPT_CODE = stin.DEPT_CODE
		 LEFT JOIN (
					  SELECT EO.PO_ID AS PO_NO,eprd.SPAREPART_CODE ,'PACK' as UNIT,eprd.DEPT_CODE,
					  eprd.PRICE_VN/[dbo].[CONVERT_UNIT](eprd.UNIT,@PACK_UNIT,eprd.SPAREPART_CODE,@A_DEPARTMENT) AS PRICE_VN,
					  eprd.PRICE_US/[dbo].[CONVERT_UNIT](eprd.UNIT,@PACK_UNIT,eprd.SPAREPART_CODE,@A_DEPARTMENT) AS PRICE_US
					  FROM EWIP_ORDER eo
					  INNER JOIN EWIP_ORDER_PR eop ON EO.PO_ID_TEMP = eop.PO_ID_TEMP
					  INNER JOIN EWIP_PURCHASE_REQUEST epr ON EOP.PR_CODE = EPR.PR_CODE AND EOP.DEPT_CODE = EPR.DEPT_CODE
					  INNER JOIN EWIP_PURCHASE_REQUEST_DETAIL eprd ON EPR.PR_CODE = eprd.PR_CODE AND EPR.DEPT_CODE = eprd.DEPT_CODE
					) SUB2 ON SUB2.SPAREPART_CODE = EHI.SPARE_PART_CODE AND SUB2.DEPT_CODE = EHI.DEPT_CODE AND SUB2.PO_NO = IDR.ORDER_CODE
		 LEFT JOIN (SELECT TOP 1
		              SPARE_PART_CODE,
		              [PRICE_VN]/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) AS PRICE_VN,
					  [PRICE_US]/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT)  AS PRICE_US
		            FROM [dbo].[EWIP_INVENTORY_BY_TIME]
					WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPARTMENT AND STOCK_CODE = @A_STOCK AND [MONTH] =  MONTH(CAST(@A_DATE AS DATE)) AND [YEAR] = YEAR(CAST(@A_DATE AS DATE))
					) AS SUB3 ON SUB3.SPARE_PART_CODE = ehi.SPARE_PART_CODE
		 LEFT JOIN (SELECT TOP 1 WITH TIES 
						[SPARE_PART_CODE],
						[PRICE_VN]/[dbo].[CONVERT_UNIT]([UNIT_CODE],@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) AS [PRICE_VN],
						[PRICE_US]/[dbo].[CONVERT_UNIT]([UNIT_CODE],@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) AS [PRICE_US], 
						@PACK_UNIT AS UNIT
						FROM [dbo].[EWIP_SPAREPART_PRICE] 
						WHERE [DEPT_CODE] = @A_DEPARTMENT AND SPARE_PART_CODE = @A_SPARE_PART_CODE
						ORDER BY ROW_NUMBER() OVER(PARTITION BY SPARE_PART_CODE ORDER BY [DATE] DESC)) SUB ON SUB.SPARE_PART_CODE = EHI.SPARE_PART_CODE
		 WHERE 
		    ehi.IN_OUT = 'IN' AND ehi.DEPT_CODE = @A_DEPARTMENT AND 
		    ehi.STOCK_CODE = @A_STOCK 
			AND ehi.SPARE_PART_CODE = @A_SPARE_PART_CODE AND
			FORMAT(EHI.DATE,'yyyyMMdd') = FORMAT(CAST(@A_DATE AS DATE),'yyyyMMdd') 
		 GROUP BY ehi.SPARE_PART_CODE 

		 print @A_DEPARTMENT
		 print @A_SPARE_PART_CODE

		 print '0'

		 -- TINH SO LUONG NHAP
		 SELECT @QUANTITY_IN = SUM([dbo].[CONVERT_UNIT](STIN.UNIT_CODE,@PACK_UNIT,STIN.SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(STIN.QUANTITY,0))
		 FROM EWIP_HISTORY_INVENTORY HIS
		 INNER JOIN [dbo].[EWIP_SP_STOCKIN] STIN ON HIS.STOCK_IN_OUT_CODE = STIN.STOCK_IN_CODE AND HIS.SPARE_PART_CODE = STIN.SPARE_PART_CODE AND his.DEPT_CODE = stin.DEPT_CODE
		 WHERE HIS.SPARE_PART_CODE = @A_SPARE_PART_CODE AND HIS.DEPT_CODE = @A_DEPARTMENT AND HIS.STOCK_CODE = @A_STOCK AND 
		       FORMAT(HIS.DATE,'yyyyMMdd') =FORMAT(CAST(@A_DATE AS DATE),'yyyyMMdd') 

		  -- TINH GIA TRI OUT --
		DECLARE @LOCATION_OUT NVARCHAR(MAX)
		DECLARE @QUANTITY_OUT_SP FLOAT = 0
		DECLARE @UNIT_OUT NVARCHAR(50)
		DECLARE @VALUES_OUT_VN FLOAT = 0
		DECLARE @VALUES_OUT_US FLOAT = 0
		DECLARE @A_TMP_LOCATION NVARCHAR(MAX)
		DECLARE @CHECK_COUNT INT

		DECLARE @A_TMP_L NVARCHAR(100)
		DECLARE @A_TMP_Q NVARCHAR(20)
		DECLARE @A_TMP_C NVARCHAR(50)
		DECLARE @A_TMP_EX NVARCHAR(50)
		DECLARE @A_TMP_IT NVARCHAR(50)
		DECLARE @A_TMP_UNIT NVARCHAR(20)
		DECLARE @A_TMP_PO_NO NVARCHAR(50)
		DECLARE @A_PRICE_US_TMP FLOAT = 0
		DECLARE @A_PRICE_VN_TMP FLOAT = 0
		DECLARE @A_QTY_INTEGRATED FLOAT = 0

		DECLARE cursorOutSparepart CURSOR FOR
		SELECT eso.LOCATION,eso.QUANTITY,eso.UNIT_ID AS UNIT
		FROM EWIP_STOCK_OUT eso  
				INNER JOIN EWIP_INVENTORY_DELIVERY_RECEIVING eidr ON eso.STOCK_OUT_CODE = eidr.CODE_NO AND eso.DEPT_CODE = eidr.DEPT_CODE
		WHERE 
			ESO.SPARE_PART_CODE = @A_SPARE_PART_CODE AND 
			ESO.DEPT_CODE = @A_DEPARTMENT AND 
			ESO.STOCK_CODE = @A_STOCK AND 
			FORMAT(ESO.DATE,'yyyyMMdd') = FORMAT(CAST(@A_DATE AS DATE),'yyyyMMdd') 
		 
		 OPEN cursorOutSparepart

		 FETCH NEXT FROM cursorOutSparepart
			INTO @LOCATION_OUT,@QUANTITY_OUT_SP,@UNIT_OUT

		WHILE @@FETCH_STATUS = 0
			 BEGIN
					DECLARE cursorOutSub CURSOR FOR
					SELECT value FROM STRING_SPLIT(@LOCATION_OUT,',')

					OPEN cursorOutSub

					FETCH NEXT FROM cursorOutSub
					INTO @A_TMP_LOCATION

					WHILE @@FETCH_STATUS = 0
					  BEGIN
							SELECT @CHECK_COUNT = COUNT(value)
							from 
							STRING_SPLIT(@A_TMP_LOCATION,'_')
					
							IF @CHECK_COUNT = 7
							  BEGIN
									SET @A_TMP_L = SUBSTRING(@A_TMP_LOCATION,1,CHARINDEX('_',@A_TMP_LOCATION) - 1)
									SET @A_TMP_Q = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L)+2,CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L)+2)-LEN(@A_TMP_L)- 2)
									SET @A_TMP_C = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q) + 2,CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q) - 2)
									SET @A_TMP_EX = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C) + 2,CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C) - 2)
									SET @A_TMP_IT = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX) + 2,
									                                          CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX) - 2)

									SET @A_TMP_UNIT = SUBSTRING(@A_TMP_LOCATION,
									                           LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT) + 2,
															   CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT) - 2)

									SET @A_TMP_PO_NO = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT + '_' + @A_TMP_UNIT) + 2,LEN(@A_TMP_LOCATION) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT + '_' + @A_TMP_UNIT) - 1)
									   
									SET @A_PRICE_VN_TMP = 0
									SET @A_PRICE_US_TMP = 0

									IF @A_TMP_C NOT IN ('NG','INTEGRATED')
									   BEGIN
											 SELECT @A_PRICE_VN_TMP = ISNULL(eprd.PRICE_VN,0)/[dbo].[CONVERT_UNIT](eprd.UNIT,@PACK_UNIT,eprd.SPAREPART_CODE,@A_DEPARTMENT),
											        @A_PRICE_US_TMP = ISNULL(eprd.PRICE_US,0)/[dbo].[CONVERT_UNIT](eprd.UNIT,@PACK_UNIT,eprd.SPAREPART_CODE,@A_DEPARTMENT)
											 FROM EWIP_ORDER eo
													INNER JOIN EWIP_ORDER_PR eop ON EO.PO_ID_TEMP = eop.PO_ID_TEMP
													INNER JOIN EWIP_PURCHASE_REQUEST epr ON EOP.PR_CODE = EPR.PR_CODE AND EOP.DEPT_CODE = EPR.DEPT_CODE
													INNER JOIN EWIP_PURCHASE_REQUEST_DETAIL eprd ON EPR.PR_CODE = eprd.PR_CODE AND EPR.DEPT_CODE = eprd.DEPT_CODE
											 WHERE EO.PO_ID = @A_TMP_PO_NO AND eprd.SPAREPART_CODE = @A_SPARE_PART_CODE AND eprd.DEPT_CODE = @A_DEPARTMENT
									 

										   IF @A_PRICE_VN_TMP IS NULL OR @A_PRICE_US_TMP IS NULL
										      BEGIN
													SELECT TOP 1 
													@A_PRICE_VN_TMP = ISNULL([PRICE_VN],0)/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) ,
													@A_PRICE_US_TMP = ISNULL([PRICE_US],0)/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) 
													FROM [dbo].[EWIP_INVENTORY_BY_TIME]
													WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_SPARE_PART_CODE AND STOCK_CODE = @A_STOCK 
													ORDER BY DATE DESC
											  END
										END
									SET @VALUES_OUT_VN += [dbo].[CONVERT_UNIT](@A_TMP_UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(@A_TMP_Q,0) *	ISNULL(@A_PRICE_VN_TMP,0);
									SET @VALUES_OUT_US += [dbo].[CONVERT_UNIT](@A_TMP_UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(@A_TMP_Q,0) *	ISNULL(@A_PRICE_US_TMP,0);
						   END
							  ELSE
							    BEGIN
									  SET @A_TMP_L = SUBSTRING(@A_TMP_LOCATION,1,CHARINDEX('_',@A_TMP_LOCATION) - 1)
									  SET @A_TMP_Q = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L)+2,CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L)+2)-LEN(@A_TMP_L)- 2)
									  SET @A_TMP_C = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q) + 2,CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q) - 2)
									  SET @A_TMP_EX = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C) + 2,CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C) - 2)
									  SET @A_TMP_IT = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX) + 2,
									                                            CHARINDEX('_',@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX)+2) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX) - 2)
									  SET @A_TMP_UNIT = SUBSTRING(@A_TMP_LOCATION,LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT) + 2,LEN(@A_TMP_LOCATION) - LEN(@A_TMP_L + '_'+@A_TMP_Q + '_'+@A_TMP_C + '_' + @A_TMP_EX + '_' + @A_TMP_IT) - 1)

								      SET @A_PRICE_VN_TMP = 0
									  SET @A_PRICE_US_TMP = 0

									  IF @A_TMP_C NOT IN ('NG','INTEGRATED')
									     BEGIN
												SELECT TOP 1 
												     @A_PRICE_VN_TMP = ISNULL([PRICE_VN],0)/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) ,
													 @A_PRICE_US_TMP = ISNULL([PRICE_US],0)/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) 
												FROM [dbo].[EWIP_INVENTORY_BY_TIME]
												WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_SPARE_PART_CODE AND STOCK_CODE = @A_STOCK AND ((MONTH(CAST(@A_DATE AS DATE)) = [MONTH] AND YEAR(CAST(@A_DATE AS DATE)) = [YEAR]) OR CAST(@A_DATE AS DATE) >= [DATE])
												ORDER BY DATE DESC

												IF @A_PRICE_VN_TMP IS NULL OR @A_PRICE_US_TMP IS NULL
												  BEGIN
														SELECT TOP 1 
														@A_PRICE_VN_TMP = ISNULL([PRICE_VN],0)/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) ,
														@A_PRICE_US_TMP = ISNULL([PRICE_US],0)/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) 
														FROM [dbo].[EWIP_INVENTORY_BY_TIME]
														WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_SPARE_PART_CODE AND STOCK_CODE = @A_STOCK 
														ORDER BY DATE DESC
												  END
									    END

										SET @VALUES_OUT_VN += [dbo].[CONVERT_UNIT](@A_TMP_UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(@A_TMP_Q,0) *	ISNULL(@A_PRICE_VN_TMP,0);
									    SET @VALUES_OUT_US += [dbo].[CONVERT_UNIT](@A_TMP_UNIT,@PACK_UNIT,@A_SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(@A_TMP_Q,0) *	ISNULL(@A_PRICE_US_TMP,0);
								END

							FETCH NEXT FROM cursorOutSub
							INTO @A_TMP_LOCATION
                     END
					 CLOSE cursorOutSub
					 DEALLOCATE cursorOutSub

					 FETCH NEXT FROM cursorOutSparepart
					 INTO @LOCATION_OUT,@QUANTITY_OUT_SP,@UNIT_OUT
			 END
		 CLOSE cursorOutSparepart
		 DEALLOCATE cursorOutSparepart

		 SET @OUT_VALUES_OF_DATE_VN = @VALUES_OUT_VN
		 SET @OUT_VALUES_OF_DATE_US = @VALUES_OUT_US

		 -- TINH SO LUONG XUAT
		 SELECT @QUANTITY_OUT = SUM([dbo].[CONVERT_UNIT](eso.UNIT_ID,@PACK_UNIT,ESO.SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(eso.QUANTITY,0))
		 FROM EWIP_HISTORY_INVENTORY HIS
		 INNER JOIN [dbo].[EWIP_STOCK_OUT] eso ON HIS.STOCK_IN_OUT_CODE = eso.STOCK_OUT_CODE AND HIS.SPARE_PART_CODE = ESO.SPARE_PART_CODE AND his.DEPT_CODE = eso.DEPT_CODE
		 WHERE HIS.SPARE_PART_CODE = @A_SPARE_PART_CODE AND HIS.DEPT_CODE = @A_DEPARTMENT AND HIS.STOCK_CODE = @A_STOCK AND 
		       FORMAT(HIS.DATE,'yyyyMMdd') = FORMAT(CAST(@A_DATE AS DATE),'yyyyMMdd')   
 print '1'
		 -- GIA TRI TON KHO
		 SELECT @INVENTORY_VALUES_VN = SUM([dbo].[CONVERT_UNIT](BL.UNIT_ID,@PACK_UNIT,BL.SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(BL.QUANTITY,0) * ISNULL(SUB2.PRICE_VN,ISNULL(SUB3.PRICE_VN,SUB.PRICE_VN))),
		        @INVENTORY_VALUES_US = SUM([dbo].[CONVERT_UNIT](BL.UNIT_ID,@PACK_UNIT,BL.SPARE_PART_CODE,@A_DEPARTMENT) * ISNULL(BL.QUANTITY,0) * ISNULL(SUB2.PRICE_US,ISNULL(SUB3.PRICE_US,SUB.PRICE_US)))
		 FROM [dbo].[EWIP_SPARE_PART_LOCATION_BASE_LINE] BL
		  LEFT JOIN (
					  SELECT EO.PO_ID AS PO_NO,eprd.SPAREPART_CODE ,'PACK' as UNIT,
					        eprd.DEPT_CODE,
							eprd.PRICE_VN/[dbo].[CONVERT_UNIT](eprd.UNIT,@PACK_UNIT,eprd.SPAREPART_CODE,@A_DEPARTMENT) AS PRICE_VN,
					        eprd.PRICE_US/[dbo].[CONVERT_UNIT](eprd.UNIT,@PACK_UNIT,eprd.SPAREPART_CODE,@A_DEPARTMENT) AS PRICE_US
					  FROM EWIP_ORDER eo
					  INNER JOIN EWIP_ORDER_PR eop ON EO.PO_ID_TEMP = eop.PO_ID_TEMP
					  INNER JOIN EWIP_PURCHASE_REQUEST epr ON EOP.PR_CODE = EPR.PR_CODE AND EOP.DEPT_CODE = EPR.DEPT_CODE
					  INNER JOIN EWIP_PURCHASE_REQUEST_DETAIL eprd ON EPR.PR_CODE = eprd.PR_CODE AND EPR.DEPT_CODE = eprd.DEPT_CODE
					) SUB2 ON SUB2.SPAREPART_CODE = BL.SPARE_PART_CODE AND SUB2.DEPT_CODE = BL.DEPT_CODE AND SUB2.PO_NO = BL.PO_NO
		 LEFT JOIN (SELECT TOP 1
		              SPARE_PART_CODE,
		              [PRICE_VN]/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) AS PRICE_VN,
					  [PRICE_US]/[dbo].[CONVERT_UNIT](UNIT,@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT)  AS PRICE_US
		            FROM [dbo].[EWIP_INVENTORY_BY_TIME]
					WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPARTMENT AND STOCK_CODE = @A_STOCK AND [MONTH] =  MONTH(CAST(@A_DATE AS DATE)) AND [YEAR] = YEAR(CAST(@A_DATE AS DATE))
					) AS SUB3 ON SUB3.SPARE_PART_CODE = BL.SPARE_PART_CODE
		 LEFT JOIN (SELECT TOP 1 WITH TIES 
						[SPARE_PART_CODE],
						[PRICE_VN]/[dbo].[CONVERT_UNIT]([UNIT_CODE],@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) AS [PRICE_VN],
						[PRICE_US]/[dbo].[CONVERT_UNIT]([UNIT_CODE],@PACK_UNIT,[SPARE_PART_CODE],@A_DEPARTMENT) AS [PRICE_US], 
						@PACK_UNIT AS UNIT
						FROM [dbo].[EWIP_SPAREPART_PRICE]
						WHERE [DEPT_CODE] = @A_DEPARTMENT AND SPARE_PART_CODE = @A_SPARE_PART_CODE
						ORDER BY ROW_NUMBER() OVER(PARTITION BY SPARE_PART_CODE ORDER BY [DATE] DESC)) SUB ON SUB.SPARE_PART_CODE =BL.SPARE_PART_CODE
         WHERE BL.[SPARE_PART_CODE] = @A_SPARE_PART_CODE AND BL.DEPT_CODE = @A_DEPARTMENT AND BL.STOCK_CODE = @A_STOCK AND 
		       BL.CONDITION_CODE NOT IN('INTEGRATED','NG') AND BL.MONTH_BASE_LINE = MONTH(CAST(@A_DATE AS DATE)) AND BL.YEAR_BASE_LINE = YEAR(CAST(@A_DATE AS DATE))

		 -- SO LUONG TON
		 SELECT @QUANTITY_INVENTORY = SUM(ISNULL(BL.QUANTITY,0) * dbo.CONVERT_UNIT(BL.UNIT_ID,@PACK_UNIT,BL.SPARE_PART_CODE,@A_DEPARTMENT))
		 FROM [dbo].[EWIP_SPARE_PART_LOCATION_BASE_LINE] BL
		 WHERE BL.SPARE_PART_CODE = @A_SPARE_PART_CODE AND BL.DEPT_CODE = @A_DEPARTMENT AND BL.STOCK_CODE = @A_STOCK AND BL.MONTH_BASE_LINE = MONTH(CAST(@A_DATE AS DATE)) AND BL.YEAR_BASE_LINE = YEAR(CAST(@A_DATE AS DATE))

		 -- LUONG TON CUA HANG THEO MAY
		 SELECT @QUANTITY_INVENTORY_INCLUDE = SUM(ISNULL(BL.QUANTITY,0) * dbo.CONVERT_UNIT(BL.UNIT_ID,@PACK_UNIT,BL.SPARE_PART_CODE,@A_DEPARTMENT))
		 FROM [dbo].[EWIP_SPARE_PART_LOCATION_BASE_LINE] BL
		 WHERE BL.SPARE_PART_CODE = @A_SPARE_PART_CODE AND BL.DEPT_CODE = @A_DEPARTMENT AND BL.STOCK_CODE = @A_STOCK AND BL.MONTH_BASE_LINE = MONTH(CAST(@A_DATE AS DATE)) AND BL.YEAR_BASE_LINE = YEAR(CAST(@A_DATE AS DATE)) AND BL.CONDITION_CODE = 'INTEGRATED'
		 
		  print '2'

		 IF EXISTS(SELECT TOP 1 * FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] eiqvbd WHERE eiqvbd.SPARE_PART_CODE = @A_SPARE_PART_CODE AND eiqvbd.DEPT_CODE = @A_DEPARTMENT AND eiqvbd.STOCK_CODE = @A_STOCK AND  FORMAT(eiqvbd.DATE,'yyyyMMdd') = FORMAT(CAST(@A_DATE AS DATE),'yyyyMMdd')) 
		    BEGIN
					UPDATE [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
					SET 
						IN_VALUES_VN = ISNULL(@IN_VALUES_OF_DATE_VN,0),
						IN_VALUES_US = ISNULL(@IN_VALUES_OF_DATE_US,0),
						OUT_VALUES_VN = ISNULL(@OUT_VALUES_OF_DATE_VN,0),
						OUT_VALUES_US = ISNULL(@OUT_VALUES_OF_DATE_US,0),
						INVENTORY_VALUES_VN = ISNULL(@INVENTORY_VALUES_VN,0),
						[INVENTORY_VALUES_US] = ISNULL(@INVENTORY_VALUES_US,0),
						QUANTITY_IN = ISNULL(@QUANTITY_IN,0),
						[QUANTITY_OUT] = ISNULL(@QUANTITY_OUT,0),
						[QUANTITY_INVENTORY] = ISNULL(@QUANTITY_INVENTORY,0),
						[QTY_INVENTORY_INCLUDE] = ISNULL(@QUANTITY_INVENTORY_INCLUDE,0),
						DATE = @A_DATE,
						[SYS_TIME] = SYSDATETIME(),
						UNIT = @PACK_UNIT,
						WEEK = DATEPART(WEEK,@A_DATE),
						QUARTER = DATEPART(QUARTER,@A_DATE)
					WHERE  [SPARE_PART_CODE] = @A_SPARE_PART_CODE AND 
					      DEPT_CODE = @A_DEPARTMENT AND 
						  STOCK_CODE = @A_STOCK AND 
						  FORMAT([DATE],'yyyyMMdd') = FORMAT(CAST(@A_DATE AS DATE),'yyyyMMdd') 
			END 
		 ELSE 
		    BEGIN
					INSERT INTO	EWIP_INVENTORY_QTY_VALUE_BY_DAY (SPARE_PART_CODE, DEPT_CODE, STOCK_CODE, DATE, IN_VALUES_VN, OUT_VALUES_VN, INVENTORY_VALUES_VN, IN_VALUES_US, OUT_VALUES_US, INVENTORY_VALUES_US, QUANTITY_IN, QUANTITY_OUT, QUANTITY_INVENTORY, QTY_INVENTORY_INCLUDE, SYS_TIME,UNIT,WEEK,QUARTER)
					VALUES (@A_SPARE_PART_CODE,
					              @A_DEPARTMENT,
								  @A_STOCK,
								  @A_DATE, 
								  ISNULL(@IN_VALUES_OF_DATE_VN,0), 
								  ISNULL(@OUT_VALUES_OF_DATE_VN,0), 
								  ISNULL(@INVENTORY_VALUES_VN,0), 
								  ISNULL(@IN_VALUES_OF_DATE_US,0), 
								  ISNULL(@OUT_VALUES_OF_DATE_US,0),  
								  ISNULL(@INVENTORY_VALUES_US,0), 
								  ISNULL(@QUANTITY_IN,0), 
								  ISNULL(@QUANTITY_OUT,0), 
								  ISNULL(@QUANTITY_INVENTORY,0), 
								  ISNULL(@QUANTITY_INVENTORY_INCLUDE,0),
								  SYSDATETIME(),
								  @PACK_UNIT,
								  DATEPART(WEEK,@A_DATE),
								  DATEPART(QUARTER,@A_DATE));
			END
		END

		IF CAST(DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0) AS DATE) = cast(GETDATE() AS DATE) -- DAY FIRST OF MONTH 
		   BEGIN
				IF NOT EXISTS(SELECT TOP 1 * FROM [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY] eiqvbd WHERE eiqvbd.SPARE_PART_CODE = @A_SPARE_PART_CODE AND eiqvbd.DEPT_CODE = @A_DEPARTMENT AND eiqvbd.STOCK_CODE = @A_STOCK AND  FORMAT(eiqvbd.DATE,'yyyyMMdd') = FORMAT(GETDATE(),'yyyyMMdd'))
					BEGIN
							INSERT INTO	EWIP_INVENTORY_QTY_VALUE_BY_DAY (SPARE_PART_CODE, DEPT_CODE, STOCK_CODE, DATE, IN_VALUES_VN, OUT_VALUES_VN, INVENTORY_VALUES_VN, IN_VALUES_US, OUT_VALUES_US, INVENTORY_VALUES_US, QUANTITY_IN, QUANTITY_OUT, QUANTITY_INVENTORY, QTY_INVENTORY_INCLUDE, SYS_TIME,UNIT,WEEK,QUARTER)
							VALUES (@A_SPARE_PART_CODE,
					              @A_DEPARTMENT,
								  @A_STOCK,
								  GETDATE(), 
								  ISNULL(@IN_VALUES_OF_DATE_VN,0), 
								  ISNULL(@OUT_VALUES_OF_DATE_VN,0), 
								  ISNULL(@INVENTORY_VALUES_VN,0), 
								  ISNULL(@IN_VALUES_OF_DATE_US,0), 
								  ISNULL(@OUT_VALUES_OF_DATE_US,0),  
								  ISNULL(@INVENTORY_VALUES_US,0), 
								  ISNULL(@QUANTITY_IN,0), 
								  ISNULL(@QUANTITY_OUT,0), 
								  ISNULL(@QUANTITY_INVENTORY,0), 
								  ISNULL(@QUANTITY_INVENTORY_INCLUDE,0),
								  SYSDATETIME(),
								  @PACK_UNIT,
								  DATEPART(WEEK,GETDATE()),
								  DATEPART(QUARTER,GETDATE()));
					END

				IF NOT EXISTS(SELECT * FROM [dbo].[EWIP_INVENTORY_BY_TIME] WHERE SPARE_PART_CODE = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPARTMENT AND STOCK_CODE = @A_STOCK AND MONTH = MONTH(GETDATE()) AND YEAR = YEAR(GETDATE()))
						   BEGIN
						         DECLARE @PRICE_VN FLOAT = 0
								 DECLARE @PRICE_US FLOAT = 0
								 print 'Q' + @QUANTITY_INVENTORY
								 IF @QUANTITY_INVENTORY > 0
								   BEGIN
										SET @PRICE_VN =  ISNULL(@INVENTORY_VALUES_VN,0)/@QUANTITY_INVENTORY
										SET @PRICE_US = ISNULL(@INVENTORY_VALUES_US,0)/@QUANTITY_INVENTORY
										print 'Q' + @QUANTITY_INVENTORY
								   END
								 ELSE
								     BEGIN
											SET @PRICE_VN = 0
										    SET @PRICE_US = 0
									 END

								 INSERT [dbo].[EWIP_INVENTORY_BY_TIME]
								 VALUES(@A_SPARE_PART_CODE,ISNULL(@QUANTITY_INVENTORY,0),@PACK_UNIT,@A_DEPARTMENT,@A_STOCK,GETDATE(),MONTH(GETDATE()),YEAR(GETDATE()),ISNULL(@QUANTITY_INVENTORY,0),@PRICE_VN,@PRICE_US)
						   END

				IF cast(GETDATE() as time) < CAST('12:30:00 AM' AS TIME)
				   BEGIN
				       print 'T' + @QUANTITY_INVENTORY
				      IF EXISTS(SELECT * FROM [dbo].[EWIP_INVENTORY_BY_TIME] WHERE [SPARE_PART_CODE] = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPARTMENT AND [STOCK_CODE] = @A_STOCK AND [MONTH] = MONTH(DATEADD(DAY,-1,GETDATE())) AND [YEAR] = YEAR(DATEADD(DAY,-1,GETDATE())))
							BEGIN
								  UPDATE [dbo].[EWIP_INVENTORY_BY_TIME]
								  SET [QUANTITY_REAL] = [dbo].[CONVERT_UNIT](@PACK_UNIT,UNIT,[SPARE_PART_CODE],@A_DEPARTMENT)* ISNULL(@QUANTITY_INVENTORY,0)
								  WHERE [SPARE_PART_CODE] = @A_SPARE_PART_CODE AND DEPT_CODE = @A_DEPARTMENT AND [STOCK_CODE] = @A_STOCK AND [MONTH] = MONTH(DATEADD(DAY,-1,GETDATE())) AND [YEAR] = YEAR(DATEADD(DAY,-1,GETDATE()))
									 
							END
					  ELSE
					      BEGIN
						            DECLARE @PRICE_VN1 FLOAT;
									DECLARE @PRICE_US1 FLOAT;

									IF @QUANTITY_INVENTORY > 0
									  BEGIN
										SET @PRICE_VN1 = ISNULL(@INVENTORY_VALUES_VN,0)/@QUANTITY_INVENTORY;
										SET @PRICE_US1 = ISNULL(@INVENTORY_VALUES_US,0)/@QUANTITY_INVENTORY;
									  END
									ELSE
									    BEGIN
												SET @PRICE_VN1 = 0;
												SET @PRICE_US1 = 0
										END

									INSERT INTO [dbo].[EWIP_INVENTORY_BY_TIME]
									VALUES(@A_SPARE_PART_CODE,ISNULL(@QUANTITY_INVENTORY,0),@PACK_UNIT,@A_DEPARTMENT,@A_STOCK,DATEADD(DAY,-1,GETDATE()),MONTH(DATEADD(DAY,-1,GETDATE())),YEAR(DATEADD(DAY,-1,GETDATE())),ISNULL(@QUANTITY_INVENTORY,0),@PRICE_VN1,@PRICE_US1)
						  END
				   END
		   END
		print '3'
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
	COMMIT TRAN;
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = @A_DEPARTMENT + '  ' + @A_SPARE_PART_CODE + ' '+ ERROR_MESSAGE();
  print @A_DEPARTMENT
  print @A_SPARE_PART_CODE
  print '1:' + @V_RETURN
  ROLLBACK TRAN;
END CATCH
GO
