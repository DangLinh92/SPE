SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_PR@GET_DATA_REPORT_CHART](
@A_DEPARTMENT		NVARCHAR(50),
@A_DATE             NVARCHAR(50),
@A_LIST_SPARE_PART  NVARCHAR(1000),
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS
BEGIN TRY
		BEGIN
		    SET NOCOUNT OFF;  
			BEGIN TRAN
			DECLARE @MONTH_PIVOT NVARCHAR(MAX) = ''
			DECLARE @I INT  = 1
			WHILE @I <= MONTH(CAST(@A_DATE AS date))
			   BEGIN
			       IF @I < MONTH(CAST(@A_DATE AS date))
						SET @MONTH_PIVOT += '[' + CAST(YEAR(CAST(@A_DATE AS date))AS NVARCHAR) + REPLACE(STR((@I), 2), SPACE(1), '0') + '],'
					ELSE
						SET @MONTH_PIVOT +=  '[' + CAST(YEAR(CAST(@A_DATE AS date))AS NVARCHAR) + REPLACE(STR((@I), 2), SPACE(1), '0') + ']'
				   SET @I += 1
			   END

           PRINT @MONTH_PIVOT

			DECLARE @SQL_ORDER_BY_MONTH NVARCHAR(MAX)
			SET @SQL_ORDER_BY_MONTH = N'
			SELECT * 
			FROM
			(SELECT FORMAT(ODP.[DATE_CREATE], ''yyyyMM'') AS MONTH_YEAR,[dbo].[CONVERT_UNIT](PRD.[UNIT],''PACK'',SP.CODE,'''+@A_DEPARTMENT+''') * ISNULL(PRD.[QUANTITY_NEED_BUY],0) AS QUANTITY,PRD.SPAREPART_CODE AS SPARE_PART_CODE
			FROM [dbo].[EWIP_SPARE_PART] SP
			INNER JOIN [dbo].[EWIP_ORDER_PR] ODP ON SP.SP_DEPT_CODE = ODP.[DEPT_CODE]
			INNER JOIN [dbo].[EWIP_PURCHASE_REQUEST_DETAIL] PRD ON SP.CODE = PRD.SPAREPART_CODE AND SP.SP_DEPT_CODE = PRD.DEPT_CODE AND ODP.[PR_CODE] = PRD.PR_CODE AND PRD.[STATUS] IN (''COMPLETE'',''ORDER'',''SHIPPING'',''RECEIVE'')
			WHERE ODP.[STATUS] IN (''COMPLETE'',''ORDER'',''SHIPPING'',''RECEIVE'') AND SP.SP_DEPT_CODE = '''+@A_DEPARTMENT+''' AND CAST(FORMAT(ODP.[DATE_CREATE], ''yyyyMM'') AS int) >= CAST((CAST((YEAR(ODP.[DATE_CREATE])) AS nvarchar) + ''01'') AS int) AND CAST(FORMAT(ODP.[DATE_CREATE], ''yyyyMM'') AS int) <= CAST(FORMAT(CAST('''+@A_DATE +''' AS date), ''yyyyMM'') AS int) AND SP.CODE IN (SELECT TRIM(VALUE) FROM STRING_SPLIT('''+@A_LIST_SPARE_PART+''',''$''))
			) AS TAB1
			PIVOT
			(
				SUM(QUANTITY) FOR MONTH_YEAR IN('+@MONTH_PIVOT+')
			) AS TAB2 
			'

			PRINT @SQL_ORDER_BY_MONTH

			EXEC(@SQL_ORDER_BY_MONTH) -- LUONG MUA HANG


			DECLARE @SQL_USE_BY_MONTH NVARCHAR(MAX)
			SET @SQL_USE_BY_MONTH = N'
			SELECT *
			FROM
			(
				SELECT FORMAT([DATE], ''yyyyMM'') AS MONTH_YEAR,[dbo].[CONVERT_UNIT]([UNIT],''PACK'',SPARE_PART_CODE,'''+@A_DEPARTMENT+''') * ISNULL([QUANTITY],0) AS QUANTITY,SPARE_PART_CODE
				FROM [dbo].[EWIP_HISTORY_INVENTORY]
				WHERE [DEPT_CODE] = '''+@A_DEPARTMENT+''' AND CAST(FORMAT([DATE], ''yyyyMM'') AS int) >= CAST((CAST((YEAR([DATE])) AS nvarchar) + ''01'') AS int) AND 
				     CAST(FORMAT([DATE], ''yyyyMM'') AS int) <= CAST(FORMAT(CAST('''+@A_DATE+''' AS date), ''yyyyMM'') AS int) AND IN_OUT = ''OUT''
					 AND SPARE_PART_CODE IN (SELECT TRIM(VALUE) FROM STRING_SPLIT('''+@A_LIST_SPARE_PART+''',''$''))
				
			) TAB1
			PIVOT 
			(
				SUM(QUANTITY) FOR MONTH_YEAR IN ('+@MONTH_PIVOT+')
			) AS TAB2
			'

			PRINT @SQL_USE_BY_MONTH

			EXEC(@SQL_USE_BY_MONTH) -- LUONG SU DUNG

			--PRINT 'OK'

			DECLARE @YEAR_AVG NVARCHAR(50)
			DECLARE @SQL_AVG_YEAR_BUY NVARCHAR(MAX)
			DECLARE @SQL_AVG_YEAR_USE NVARCHAR(MAX)

			SET @YEAR_AVG = '[' + CAST ((YEAR(CAST(@A_DATE AS DATE)) - 1)AS nvarchar) + ']' + ',[' + CAST(YEAR(CAST(@A_DATE AS DATE)) AS nvarchar) + ']'; 

			PRINT @YEAR_AVG

			SET @SQL_AVG_YEAR_BUY = N'
			SELECT *
			FROM
			(
			SELECT SP.CODE,CASE WHEN YEAR(ODP.[DATE_CREATE]) < YEAR(GETDATE()) THEN SUM([dbo].[CONVERT_UNIT](PRD.[UNIT],''PACK'',SP.CODE,'''+@A_DEPARTMENT+''') * PRD.QUANTITY_NEED_BUY)/12 ELSE 0 END AS QUANTITY,YEAR(ODP.[DATE_CREATE]) AS AVG_YEAR
			FROM [dbo].[EWIP_SPARE_PART] SP
			INNER JOIN [dbo].[EWIP_ORDER_PR] ODP ON SP.SP_DEPT_CODE = ODP.[DEPT_CODE]
			INNER JOIN [dbo].[EWIP_PURCHASE_REQUEST_DETAIL] PRD ON SP.CODE = PRD.SPAREPART_CODE AND SP.SP_DEPT_CODE = PRD.DEPT_CODE AND ODP.[PR_CODE] = PRD.PR_CODE AND PRD.[STATUS] = ''COMPLETE''
			WHERE ODP.[STATUS] IN (''COMPLETE'',''ORDER'',''SHIPPING'',''RECEIVE'') AND SP.SP_DEPT_CODE = '''+@A_DEPARTMENT +''' AND SP.CODE IN (SELECT TRIM(VALUE) FROM STRING_SPLIT('''+@A_LIST_SPARE_PART+''',''$'')) AND ((YEAR(ODP.[DATE_CREATE]) = YEAR(CAST('''+@A_DATE+''' AS DATE))) OR (YEAR(ODP.[DATE_CREATE]) = YEAR(CAST('''+@A_DATE +''' AS DATE)) - 1))
			GROUP BY SP.CODE,YEAR(ODP.[DATE_CREATE])
			) TAB1
			PIVOT
			(
				SUM(QUANTITY) FOR AVG_YEAR IN('+@YEAR_AVG+')
			) AS TAB2'

			EXEC(@SQL_AVG_YEAR_BUY) 

			SET @SQL_AVG_YEAR_USE = N'
			SELECT *
			FROM
			(
			SELECT [SPARE_PART_CODE] AS CODE ,CASE WHEN YEAR([DATE]) < YEAR(GETDATE()) THEN SUM([dbo].[CONVERT_UNIT]([UNIT],''PACK'',SPARE_PART_CODE,'''+@A_DEPARTMENT+''') * [QUANTITY]) /12 ELSE 0 END AS QUANTITY,YEAR([DATE]) AS AVG_YEAR
			FROM [dbo].[EWIP_HISTORY_INVENTORY]
			WHERE [DEPT_CODE] = '''+@A_DEPARTMENT+''' AND [SPARE_PART_CODE] IN (SELECT TRIM(VALUE) FROM STRING_SPLIT('''+@A_LIST_SPARE_PART+''',''$''))  AND ((YEAR([DATE]) = YEAR(CAST('''+@A_DATE + '''AS DATE))) OR (YEAR([DATE]) = YEAR(CAST('''+@A_DATE +''' AS DATE)) - 1))
			GROUP BY [SPARE_PART_CODE],YEAR([DATE])
			) TAB1
			PIVOT
			(
				SUM(QUANTITY) FOR AVG_YEAR IN('+@YEAR_AVG+')
			) AS TAB2'

			EXEC(@SQL_AVG_YEAR_USE) 

			IF @A_DEPARTMENT = 'SMT'
			  BEGIN
			         DECLARE @AVG_PRE_YEAR_POINT FLOAT
					 DECLARE @AVG_YEAR_POINT FLOAT

					  ;WITH cte1 AS
					 (
					 SELECT SUM(WHC_PLAN_POINT) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
					 FROM [dbo].[EWIP_GOC_PLAN_SMT]
					 WHERE YEAR_PLAN = YEAR(CAST(@A_DATE AS DATE)) - 1
					 GROUP BY FORMAT (CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK])
					 SELECT @AVG_PRE_YEAR_POINT = SUM(PLANT)
					 FROM cte1 WHERE RowNum = 1 

					 ;WITH cte2 AS
					 (
					 SELECT SUM(WHC_PLAN_POINT) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
					 FROM [dbo].[EWIP_GOC_PLAN_SMT]
					 WHERE YEAR_PLAN = YEAR(CAST(@A_DATE AS DATE))
					 GROUP BY FORMAT (CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK])
					 SELECT @AVG_YEAR_POINT = SUM(PLANT)
					 FROM cte2 WHERE RowNum = 1 

					 ;WITH cte AS
					 (
					 SELECT SUM(WHC_PLAN_POINT) AS PLANT,[MONTH] ,RowNum = ROW_NUMBER() OVER (PARTITION BY [MONTH] ORDER BY [WEEK] DESC)
					 FROM [dbo].[EWIP_GOC_PLAN_SMT]
					 WHERE CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE) <= CAST(@A_DATE AS DATE)
					 GROUP BY FORMAT (CAST((CAST(YEAR_PLAN AS NVARCHAR) + '-' + CAST([MONTH] AS NVARCHAR) + '-' + '01') AS DATE),'yyyyMM'),[MONTH],[WEEK])
					 SELECT @AVG_PRE_YEAR_POINT AS PRE_YEAR,@AVG_YEAR_POINT AS YEAR_POINT,PLANT,CAST([MONTH] AS NVARCHAR) AS TIME_VALUE 
					 FROM cte WHERE RowNum = 1 ORDER BY [MONTH] ASC

		      END


       END
	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
	COMMIT TRAN
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
  ROLLBACK TRAN
END CATCH
GO
