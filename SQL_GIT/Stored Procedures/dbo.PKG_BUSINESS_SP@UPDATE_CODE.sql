SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_SP@UPDATE_CODE](
@A_DEPARTMENT		NVARCHAR(50),
@A_CODE_OLD          NVARCHAR(50),
@A_CODE_NEW          NVARCHAR(50),
@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

BEGIN TRY
 BEGIN TRAN;
		BEGIN
			
			DECLARE @CHECK INT = 0;
			DECLARE @CHECK1 INT = 0;
			SELECT @CHECK = COUNT(*) FROM [dbo].[EWIP_SPARE_PART] WHERE [CODE] = @A_CODE_OLD;
			SELECT @CHECK1 = COUNT(*) FROM [dbo].[EWIP_SPARE_PART] WHERE [CODE] = @A_CODE_NEW;

			IF @CHECK1 = 0
				IF @CHECK > 0
					BEGIN
					  
							UPDATE [dbo].[EWIP_SPARE_PART] SET [CODE] = @A_CODE_NEW WHERE [CODE] = @A_CODE_OLD AND SP_DEPT_CODE = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_SPARE_PART_DEPT] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_SPAREPART_DOCUMENT] SET CODE= @A_CODE_NEW WHERE CODE = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT AND [IS_EQUIPMENT] = '0' ;-- 0: THIET BI  1: MAY MOC
							UPDATE [dbo].[EWIP_SPAREPART_INVENTORY] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_SPAREPART_LOCATION] 
							SET [SPARE_PART_CODE]= @A_CODE_NEW
							WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_SPAREPART_PRICE] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND DEPT_CODE = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_SPAREPART_UNIT] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_STOCK_OUT] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_SP_STOCKIN] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_SETUP_MINSTOCK] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_HISTORY_MAINTAIN_REPAIR_SPAREPART] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_HISTORY_INVENTORY] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
							UPDATE [dbo].[EWIP_INVENTORY_BY_TIME] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_BOM] SET [SPARE_PART_CODE]= @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_MRP] SET [SPAREPART_CODE]= @A_CODE_NEW WHERE  [SPAREPART_CODE]= @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
						
							UPDATE [dbo].[EWIP_INVENTORY_SHEET_DETAIL] SET [SPARE_PART_CODE] = @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_PURCHASE_REQUEST_DETAIL] SET  [SPAREPART_CODE] = @A_CODE_NEW WHERE [SPAREPART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE EWIP_SPAREPART_LEND SET [SPARE_PART_CODE] = @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;
							UPDATE EWIP_SPAREPART_LOCATION_TRANSACTION SET  [SPARE_PART_CODE] = @A_CODE_NEW WHERE [SPARE_PART_CODE] = @A_CODE_OLD AND [DEPT_CODE] = @A_DEPARTMENT;

							UPDATE EWIP_BOM_BY_MONTH
							SET SPARE_PART_CODE = @A_CODE_NEW
							WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE_OLD;

							UPDATE [dbo].[EWIP_INVENTORY_QTY_VALUE_BY_DAY]
							SET SPARE_PART_CODE = @A_CODE_NEW
							WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE_OLD;

							UPDATE [dbo].[EWIP_INVENTORY_VALUES_BY_TIME]
							SET SPARE_PART_CODE = @A_CODE_NEW
							WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE_OLD;

							UPDATE [dbo].[EWIP_MERGE_SPAREPART_CODE]
							SET SPARE_PART_CODE = @A_CODE_NEW
							WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE_OLD;

							UPDATE [dbo].[EWIP_ORDER_DETAIL]
							SET SPARE_PART_CODE = @A_CODE_NEW
							WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE_OLD;

							UPDATE [dbo].[EWIP_SPARE_PART_LOCATION_BASE_LINE]
							SET SPARE_PART_CODE = @A_CODE_NEW
							WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE_OLD;

							UPDATE [dbo].[SPAREPART_CODE_ENCRIPT]
							SET [SPARE_PART_CODE] = @A_CODE_NEW
							WHERE SPARE_PART_CODE = @A_CODE_OLD AND DEPT_CODE = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_EQUIPMENT_BOM]
							SET [SPARE_PART_CODE] = @A_CODE_NEW
							WHERE [SPARE_PART_CODE] = @A_CODE_NEW AND DEP_CODE = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_EQUIPMENT_MAINTAIN]
							SET [SPARE_PART_CODE] = @A_CODE_NEW
							WHERE [SPARE_PART_CODE] = @A_CODE_NEW AND DEPT_CODE = @A_DEPARTMENT;

							UPDATE [dbo].[EWIP_SPARE_PART_LOCATION_BASE_LINE_HISTORY]
							SET [SPARE_PART_CODE] = @A_CODE_NEW
							WHERE [SPARE_PART_CODE] = @A_CODE_NEW AND DEPT_CODE = @A_DEPARTMENT;

							SET @N_RETURN = 0;
							SET @V_RETURN = 'MSG_COM_004';
						
					END;
				 ELSE
				    BEGIN
						SET @N_RETURN = -1;
						SET @V_RETURN = 'MSG_NO_EXIST_DATA';
					END;
			ELSE
			  BEGIN
				SET @N_RETURN = -1;
				SET @V_RETURN = 'MSG_EXIST_DATA';
			 END;
		END;
	COMMIT TRAN;
END TRY
	BEGIN CATCH
  SET @N_RETURN = ERROR_NUMBER();
  SET @V_RETURN = ERROR_MESSAGE();
  ROLLBACK TRAN;
END CATCH;
GO
