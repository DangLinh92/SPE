SET QUOTED_IDENTIFIER ON
GO
SET ANSI_NULLS ON
GO
CREATE PROC [dbo].[PKG_BUSINESS_SP@PUT](
@A_CODE						NVARCHAR(50),
@A_NAME_VI					NVARCHAR(50),
@A_NAME_KR					NVARCHAR(50),
@A_CODE_VENDOR				NVARCHAR(50),
@A_GL_ACCOUNT				NVARCHAR(20),
@A_SP_TYPE                  VARCHAR(50),
@A_MATERIAL                 NVARCHAR(50),
@A_SIZE                     NVARCHAR(50),
@A_WEIGHT                   NVARCHAR(50),
@A_USES                     NVARCHAR(200),
@A_EQUIPMENT                NVARCHAR(200),
@A_SPECIFICATION            NVARCHAR(500),
@A_UNIT						NVARCHAR(20),
@A_DESC						NVARCHAR(1000),
@A_COST_CTR					NVARCHAR(10),
@A_DEPARTMENT				NVARCHAR(50),
@A_IMAGE					NVARCHAR(MAX),
@USER				        VARCHAR(50),

@A_UNIT1					NVARCHAR(20),
@A_UNIT2					NVARCHAR(20),
@A_UNIT3					NVARCHAR(20),
@A_UNIT4					NVARCHAR(20),

@A_RATE1					FLOAT,
@A_RATE2					FLOAT,
@A_RATE3					FLOAT,
@A_RATE4					FLOAT,

@A_MIN_ORDER				FLOAT,
@A_LEAD_TIME                INT,

@N_RETURN			int				OUTPUT,
@V_RETURN			NVARCHAR(4000)	OUTPUT
)
AS

DECLARE	@V_CHECK			TINYINT;
DECLARE	@V_CHECK1			TINYINT;

BEGIN TRY

	SET @V_CHECK = 0;
	SET @V_CHECK1 = 0;

	BEGIN TRAN;
	SELECT @V_CHECK = COUNT(*) FROM EWIP_SPARE_PART WHERE CODE = @A_CODE AND [SP_DEPT_CODE] = @A_DEPARTMENT 
	SELECT @V_CHECK1 = COUNT(*) FROM [EWIP_SPARE_PART_DEPT] WHERE [SPARE_PART_CODE] = @A_CODE AND [DEPT_CODE] = @A_DEPARTMENT 

	IF @V_CHECK != 0 
		BEGIN
			UPDATE EWIP_SPARE_PART 
			SET 
				VENDER_ID = @A_CODE_VENDOR,
				NAME_VI = @A_NAME_VI,
				NAME_KR = @A_NAME_KR,
				UNIT_ID = @A_UNIT,
				GL_ACCOUNT = @A_GL_ACCOUNT,
				[DESCRIPTION] = @A_DESC,
				[TYPE] = @A_SP_TYPE,
				[MATERIAL] =@A_MATERIAL,
				[USES]=@A_USES,
				[EQUIPMENT_USED]=@A_EQUIPMENT,
				[SPECIFICATIONS]=@A_SPECIFICATION,
				[SIZE] = @A_SIZE,
				[WEIGHT]= @A_WEIGHT,
				[UPDATE_BY] = @USER,
				UPDATED_AT = GETDATE(),
				IMAGE = @A_IMAGE,
				MIN_ORDER = @A_MIN_ORDER,
				[LEAD_TIME] = @A_LEAD_TIME
			WHERE CODE = @A_CODE AND [SP_DEPT_CODE] = @A_DEPARTMENT 

			IF @V_CHECK1 != 0
				BEGIN
					UPDATE [dbo].[EWIP_SPARE_PART_DEPT]
					SET [COST_CTR] = @A_COST_CTR
					WHERE [SPARE_PART_CODE] = @A_CODE AND [DEPT_CODE] = @A_DEPARTMENT
				END
             ELSE
				INSERT INTO EWIP_SPARE_PART_DEPT([DEPT_CODE],[SPARE_PART_CODE],[COST_CTR])
				VALUES(@A_DEPARTMENT,@A_CODE,@A_COST_CTR)
		END
	ELSE
		BEGIN -- ADD NEW 
			INSERT INTO EWIP_SPARE_PART
			(
				CODE, 
				NAME_VI, 
				NAME_KR, 
				UNIT_ID, 
				GL_ACCOUNT,
				VENDER_ID,
				[IMAGE],
				[DESCRIPTION],
				[TYPE],
				[MATERIAL],
				[USES],
				[EQUIPMENT_USED],
				[SPECIFICATIONS],
				[SIZE],
				[WEIGHT],
				[CREATE_BY],
				[CREATED_AT],
				MIN_ORDER,[SP_DEPT_CODE],[LEAD_TIME])
			VALUES (
				@A_CODE, 
				@A_NAME_VI, 
				@A_NAME_KR, 
				@A_UNIT, 
				@A_GL_ACCOUNT,
				@A_CODE_VENDOR,
				@A_IMAGE,
				@A_DESC,
				@A_SP_TYPE,
				@A_MATERIAL,
				@A_USES,
				@A_EQUIPMENT,
				@A_SPECIFICATION,
				@A_SIZE,
				@A_WEIGHT,
				@USER,
				GETDATE(),
				@A_MIN_ORDER,
				@A_DEPARTMENT,@A_LEAD_TIME)

				INSERT INTO EWIP_SPARE_PART_DEPT([DEPT_CODE],[SPARE_PART_CODE],[COST_CTR])
				VALUES(@A_DEPARTMENT,@A_CODE,@A_COST_CTR)
		END

		-- INSERT UNIT FOR SPAREPART--
		 DELETE FROM [dbo].[EWIP_SPAREPART_UNIT] WHERE [SPARE_PART_CODE] = @A_CODE AND [DEPT_CODE] = @A_DEPARTMENT

		 INSERT INTO [dbo].[EWIP_SPAREPART_UNIT]
		 VALUES(@A_CODE,@A_UNIT,@A_UNIT,1,@A_DEPARTMENT)

		 IF @A_UNIT1 IS NOT NULL AND @A_UNIT1 <> ''
			INSERT INTO [dbo].[EWIP_SPAREPART_UNIT]
			VALUES(@A_CODE,@A_UNIT1,@A_UNIT,@A_RATE1,@A_DEPARTMENT)


	     IF @A_UNIT2 IS NOT NULL AND @A_UNIT2 <> ''
			INSERT INTO [dbo].[EWIP_SPAREPART_UNIT]
			VALUES(@A_CODE,@A_UNIT2,@A_UNIT,@A_RATE2,@A_DEPARTMENT)

		 IF @A_UNIT3 IS NOT NULL AND @A_UNIT3 <> ''
			INSERT INTO [dbo].[EWIP_SPAREPART_UNIT]
			VALUES(@A_CODE,@A_UNIT3,@A_UNIT,@A_RATE3,@A_DEPARTMENT)

		 IF @A_UNIT4 IS NOT NULL AND @A_UNIT4 <> ''
			INSERT INTO [dbo].[EWIP_SPAREPART_UNIT]
			VALUES(@A_CODE,@A_UNIT4,@A_UNIT,@A_RATE4,@A_DEPARTMENT)

			-- TINH TON KHO AN TOAN
		  DECLARE @A_WORKING_A_LINE_PACK FLOAT = 0
		  DECLARE @A_LINE FLOAT = 0

		  SELECT TOP 1  @A_WORKING_A_LINE_PACK = ISNULL([WORKING_A_LINE_PACK],0),@A_LINE = ISNULL([WORKING_LINE_NUMBER],0)
		  FROM [dbo].[EWIP_BOM]
		  WHERE GETDATE() BETWEEN [FROM_TIME] AND [TO_TIME] AND DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE
		  ORDER BY [FROM_TIME] DESC

		  IF @A_WORKING_A_LINE_PACK = 0 OR @A_WORKING_A_LINE_PACK IS NULL OR @A_LINE = 0 OR @A_LINE IS NULL 
		     BEGIN
				   SELECT TOP 1  @A_WORKING_A_LINE_PACK = ISNULL([WORKING_A_LINE_PACK],0),@A_LINE = ISNULL([WORKING_LINE_NUMBER],0)
				   FROM [dbo].[EWIP_BOM]
				   WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE
				   ORDER BY [FROM_TIME] DESC 
			 END

		  IF @A_WORKING_A_LINE_PACK > 0 AND @A_LINE > 0
		    BEGIN
				  DECLARE @STOCK_CODE NVARCHAR(50)
				  SELECT TOP 1 @STOCK_CODE = CODE FROM [dbo].[EWIP_STOCK] WHERE DEPT_CODE = @A_DEPARTMENT

					  -- UPDATE FOR SAFE INVENTORY ton kho an toan
				  IF EXISTS(SELECT * FROM [EWIP_SETUP_MINSTOCK] WHERE [SPARE_PART_CODE] = @A_CODE AND [DEPT_CODE] = @A_DEPARTMENT)
				     BEGIN
							UPDATE [EWIP_SETUP_MINSTOCK]
							SET [MIN_STOCK] =  [dbo].[CONVERT_UNIT]('PACK',UNIT_CODE,SPARE_PART_CODE,@A_DEPARTMENT) * (@A_LEAD_TIME + 7)*@A_WORKING_A_LINE_PACK*@A_LINE/2,[DATE_UPDATE] = SYSDATETIME() -- (LEAD TIME + DRAF PO = 7)/2
							WHERE [SPARE_PART_CODE] = @A_CODE AND [DEPT_CODE] = @A_DEPARTMENT
					 END
				  ELSE 
				      BEGIN
							INSERT INTO [EWIP_SETUP_MINSTOCK]
							VALUES(@A_CODE,'PACK', (@A_LEAD_TIME + 7)*@A_WORKING_A_LINE_PACK*@A_LINE/2 ,@STOCK_CODE,@A_DEPARTMENT,0,SYSDATETIME());
					  END


					IF EXISTS(SELECT * FROM [dbo].[EWIP_BOM_BY_MONTH] WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE AND MONTH = MONTH(GETDATE()) AND [YEART] = YEAR(GETDATE()))
					    BEGIN
								UPDATE [dbo].[EWIP_BOM_BY_MONTH]
								SET MIN_STOCK_PACK = (@A_LEAD_TIME + 7)*@A_WORKING_A_LINE_PACK*@A_LINE/2 
								WHERE DEPT_CODE = @A_DEPARTMENT AND SPARE_PART_CODE = @A_CODE AND [MONTH] = MONTH(GETDATE()) AND [YEART] = YEAR(GETDATE())
						END
			  END

	SET @N_RETURN = 0;
	SET @V_RETURN = 'MSG_COM_004';
	COMMIT TRANSACTION;

	END TRY
	BEGIN CATCH
	SET @N_RETURN = ERROR_NUMBER();
	SET @V_RETURN = ERROR_MESSAGE();
	ROLLBACK TRANSACTION;
END CATCH
GO
